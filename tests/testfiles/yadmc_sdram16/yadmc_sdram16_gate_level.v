/* Generated by Yosys 0.39+1 (git sha1 b3124f30e, x86_64-w64-mingw32-g++ 13.2.1 -Os) */

module yadmc_sdram16(sdram_clk, sdram_rst, command_evict, command_refill, command_ack, evict_adr, refill_adr, cache_adr, cache_dat_o, cache_we, cache_dat_i, sdram_cke, sdram_cs_n, sdram_we_n, sdram_cas_n, sdram_ras_n, sdram_dqm, sdram_adr, sdram_ba, sdram_dq);
  wire [2:0] _0000_;
  wire _0001_;
  wire _0002_;
  wire _0003_;
  wire _0004_;
  wire _0005_;
  wire _0006_;
  wire _0007_;
  wire _0008_;
  wire _0009_;
  wire _0010_;
  wire [3:0] _0011_;
  wire [3:0] _0012_;
  wire [9:0] _0013_;
  wire [3:0] _0014_;
  wire _0015_;
  wire _0016_;
  wire _0017_;
  wire [15:0] _0018_;
  wire _0019_;
  wire [13:0] _0020_;
  wire _0021_;
  wire _0022_;
  wire _0023_;
  wire _0024_;
  wire [3:0] _0025_;
  wire [4:0] _0026_;
  wire [12:0] _0027_;
  wire [12:0] _0028_;
  wire [12:0] _0029_;
  wire [12:0] _0030_;
  wire [2:0] _0031_;
  wire [2:0] _0032_;
  wire _0033_;
  wire [11:0] _0034_;
  wire _0035_;
  wire _0036_;
  wire _0037_;
  wire _0038_;
  wire _0039_;
  wire _0040_;
  wire _0041_;
  wire [12:0] _0042_;
  wire [1:0] _0043_;
  wire [1:0] _0044_;
  wire _0045_;
  wire _0046_;
  wire _0047_;
  wire _0048_;
  wire _0049_;
  wire _0050_;
  wire _0051_;
  wire [15:0] _0052_;
  wire [1:0] _0053_;
  wire _0054_;
  wire _0055_;
  wire _0056_;
  wire _0057_;
  wire _0058_;
  wire [4:0] _0059_;
  wire [1:0] _0060_;
  wire _0061_;
  wire _0062_;
  wire _0063_;
  wire [12:0] _0064_;
  wire [4:0] _0065_;
  wire _0066_;
  wire _0067_;
  wire _0068_;
  wire _0069_;
  wire _0070_;
  wire _0071_;
  wire [4:0] _0072_;
  wire _0073_;
  wire _0074_;
  wire _0075_;
  wire _0076_;
  wire _0077_;
  wire _0078_;
  wire [4:0] _0079_;
  wire _0080_;
  wire _0081_;
  wire _0082_;
  wire _0083_;
  wire _0084_;
  wire _0085_;
  wire [4:0] _0086_;
  wire _0087_;
  wire [4:0] _0088_;
  wire _0089_;
  wire [4:0] _0090_;
  wire [4:0] _0091_;
  wire [4:0] _0092_;
  wire [4:0] _0093_;
  wire _0094_;
  wire _0095_;
  wire _0096_;
  wire _0097_;
  wire _0098_;
  wire _0099_;
  wire [3:0] _0100_;
  wire _0101_;
  wire _0102_;
  wire _0103_;
  wire _0104_;
  wire _0105_;
  wire [4:0] _0106_;
  wire _0107_;
  wire _0108_;
  wire _0109_;
  wire _0110_;
  wire _0111_;
  wire _0112_;
  wire _0113_;
  wire [1:0] _0114_;
  wire _0115_;
  wire _0116_;
  wire _0117_;
  wire _0118_;
  wire _0119_;
  wire _0120_;
  wire _0121_;
  wire _0122_;
  wire _0123_;
  wire _0124_;
  wire _0125_;
  wire _0126_;
  wire _0127_;
  wire _0128_;
  wire _0129_;
  wire [3:0] _0130_;
  wire _0131_;
  wire _0132_;
  wire _0133_;
  wire [4:0] _0134_;
  wire _0135_;
  wire _0136_;
  wire _0137_;
  wire _0138_;
  wire _0139_;
  wire _0140_;
  wire [1:0] _0141_;
  wire _0142_;
  wire _0143_;
  wire _0144_;
  wire _0145_;
  wire _0146_;
  wire _0147_;
  wire _0148_;
  wire _0149_;
  wire _0150_;
  wire _0151_;
  wire _0152_;
  wire [4:0] _0153_;
  wire _0154_;
  wire _0155_;
  wire _0156_;
  wire _0157_;
  wire [1:0] _0158_;
  wire _0159_;
  wire _0160_;
  wire _0161_;
  wire _0162_;
  wire _0163_;
  wire _0164_;
  wire _0165_;
  wire _0166_;
  wire _0167_;
  wire [4:0] _0168_;
  wire _0169_;
  wire [1:0] _0170_;
  wire _0171_;
  wire _0172_;
  wire _0173_;
  wire _0174_;
  wire _0175_;
  wire _0176_;
  wire _0177_;
  wire [4:0] _0178_;
  wire [1:0] _0179_;
  wire _0180_;
  wire _0181_;
  wire _0182_;
  wire _0183_;
  wire _0184_;
  wire _0185_;
  wire [4:0] _0186_;
  wire [1:0] _0187_;
  wire _0188_;
  wire _0189_;
  wire _0190_;
  wire _0191_;
  wire _0192_;
  wire _0193_;
  wire [4:0] _0194_;
  wire [1:0] _0195_;
  wire _0196_;
  wire _0197_;
  wire _0198_;
  wire _0199_;
  wire _0200_;
  wire _0201_;
  wire [4:0] _0202_;
  wire [1:0] _0203_;
  wire _0204_;
  wire _0205_;
  wire _0206_;
  wire _0207_;
  wire _0208_;
  wire _0209_;
  wire [4:0] _0210_;
  wire [1:0] _0211_;
  wire _0212_;
  wire _0213_;
  wire _0214_;
  wire _0215_;
  wire _0216_;
  wire _0217_;
  wire [3:0] _0218_;
  wire [12:0] _0219_;
  wire [12:0] _0220_;
  wire [12:0] _0221_;
  wire [12:0] _0222_;
  wire [12:0] _0223_;
  wire [12:0] _0224_;
  wire _0225_;
  wire _0226_;
  wire _0227_;
  wire _0228_;
  wire _0229_;
  wire _0230_;
  wire _0231_;
  wire _0232_;
  wire _0233_;
  wire _0234_;
  wire _0235_;
  wire _0236_;
  wire _0237_;
  wire _0238_;
  wire _0239_;
  wire _0240_;
  wire _0241_;
  wire _0242_;
  wire _0243_;
  wire _0244_;
  wire _0245_;
  wire _0246_;
  wire _0247_;
  wire _0248_;
  wire _0249_;
  wire _0250_;
  wire _0251_;
  wire _0252_;
  wire _0253_;
  wire _0254_;
  wire _0255_;
  wire _0256_;
  wire _0257_;
  wire _0258_;
  wire _0259_;
  wire _0260_;
  wire _0261_;
  wire _0262_;
  wire _0263_;
  wire _0264_;
  wire _0265_;
  wire _0266_;
  wire _0267_;
  wire _0268_;
  wire _0269_;
  wire _0270_;
  wire _0271_;
  wire _0272_;
  wire _0273_;
  wire _0274_;
  wire _0275_;
  wire _0276_;
  wire _0277_;
  wire _0278_;
  wire _0279_;
  wire _0280_;
  wire _0281_;
  wire [12:0] _0282_;
  wire [12:0] _0283_;
  wire [12:0] _0284_;
  wire [12:0] _0285_;
  wire [12:0] _0286_;
  wire _0287_;
  wire _0288_;
  wire _0289_;
  wire _0290_;
  wire _0291_;
  wire _0292_;
  wire _0293_;
  wire _0294_;
  wire _0295_;
  wire _0296_;
  wire _0297_;
  wire _0298_;
  wire _0299_;
  wire _0300_;
  wire _0301_;
  wire _0302_;
  wire _0303_;
  wire _0304_;
  wire _0305_;
  wire [4:0] _0306_;
  wire _0307_;
  wire [4:0] _0308_;
  wire _0309_;
  wire _0310_;
  wire _0311_;
  wire _0312_;
  wire _0313_;
  wire [4:0] _0314_;
  wire _0315_;
  wire [4:0] _0316_;
  wire _0317_;
  wire _0318_;
  wire _0319_;
  wire _0320_;
  wire _0321_;
  wire _0322_;
  wire _0323_;
  wire _0324_;
  wire _0325_;
  wire _0326_;
  wire _0327_;
  wire _0328_;
  wire _0329_;
  wire _0330_;
  wire _0331_;
  wire _0332_;
  wire _0333_;
  wire _0334_;
  wire _0335_;
  wire [4:0] _0336_;
  wire _0337_;
  wire _0338_;
  wire _0339_;
  wire [4:0] _0340_;
  wire _0341_;
  wire _0342_;
  wire _0343_;
  wire [4:0] _0344_;
  wire _0345_;
  wire [4:0] _0346_;
  wire _0347_;
  wire [4:0] _0348_;
  wire _0349_;
  wire [4:0] _0350_;
  wire _0351_;
  wire _0352_;
  wire _0353_;
  wire _0354_;
  wire _0355_;
  wire _0356_;
  wire _0357_;
  wire _0358_;
  wire _0359_;
  wire _0360_;
  wire _0361_;
  wire _0362_;
  wire _0363_;
  wire [4:0] _0364_;
  wire _0365_;
  wire [4:0] _0366_;
  wire _0367_;
  wire [4:0] _0368_;
  wire _0369_;
  wire _0370_;
  wire _0371_;
  wire _0372_;
  wire _0373_;
  wire _0374_;
  wire _0375_;
  wire _0376_;
  wire _0377_;
  wire _0378_;
  wire _0379_;
  wire _0380_;
  wire _0381_;
  wire _0382_;
  wire _0383_;
  wire _0384_;
  wire _0385_;
  wire [4:0] _0386_;
  wire _0387_;
  wire [4:0] _0388_;
  wire _0389_;
  wire [3:0] _0390_;
  wire _0391_;
  wire _0392_;
  wire _0393_;
  wire _0394_;
  wire _0395_;
  wire [3:0] _0396_;
  wire _0397_;
  wire _0398_;
  wire _0399_;
  wire _0400_;
  wire _0401_;
  wire [4:0] _0402_;
  wire _0403_;
  wire [4:0] _0404_;
  wire _0405_;
  wire _0406_;
  wire _0407_;
  wire _0408_;
  wire _0409_;
  wire _0410_;
  wire _0411_;
  wire _0412_;
  wire _0413_;
  wire [4:0] _0414_;
  wire _0415_;
  wire [1:0] _0416_;
  wire _0417_;
  wire [4:0] _0418_;
  wire _0419_;
  wire _0420_;
  wire _0421_;
  wire _0422_;
  wire _0423_;
  wire _0424_;
  wire _0425_;
  wire _0426_;
  wire _0427_;
  wire _0428_;
  wire _0429_;
  wire _0430_;
  wire _0431_;
  wire _0432_;
  wire _0433_;
  wire _0434_;
  wire _0435_;
  wire _0436_;
  wire _0437_;
  wire _0438_;
  wire _0439_;
  wire _0440_;
  wire _0441_;
  wire _0442_;
  wire _0443_;
  wire [4:0] _0444_;
  wire _0445_;
  wire [4:0] _0446_;
  wire _0447_;
  wire _0448_;
  wire _0449_;
  wire _0450_;
  wire _0451_;
  wire _0452_;
  wire _0453_;
  wire _0454_;
  wire _0455_;
  wire [1:0] _0456_;
  wire _0457_;
  wire _0458_;
  wire _0459_;
  wire [1:0] _0460_;
  wire _0461_;
  wire _0462_;
  wire _0463_;
  wire _0464_;
  wire _0465_;
  wire _0466_;
  wire _0467_;
  wire _0468_;
  wire _0469_;
  wire _0470_;
  wire _0471_;
  wire _0472_;
  wire _0473_;
  wire _0474_;
  wire _0475_;
  wire [4:0] _0476_;
  wire _0477_;
  wire [4:0] _0478_;
  wire _0479_;
  wire _0480_;
  wire _0481_;
  wire _0482_;
  wire _0483_;
  wire _0484_;
  wire _0485_;
  wire _0486_;
  wire _0487_;
  wire _0488_;
  wire _0489_;
  wire _0490_;
  wire _0491_;
  wire _0492_;
  wire _0493_;
  wire _0494_;
  wire _0495_;
  wire _0496_;
  wire _0497_;
  wire _0498_;
  wire _0499_;
  wire _0500_;
  wire _0501_;
  wire _0502_;
  wire _0503_;
  wire _0504_;
  wire _0505_;
  wire [4:0] _0506_;
  wire _0507_;
  wire [4:0] _0508_;
  wire _0509_;
  wire _0510_;
  wire _0511_;
  wire _0512_;
  wire _0513_;
  wire _0514_;
  wire _0515_;
  wire _0516_;
  wire _0517_;
  wire _0518_;
  wire _0519_;
  wire _0520_;
  wire _0521_;
  wire _0522_;
  wire _0523_;
  wire _0524_;
  wire _0525_;
  wire [1:0] _0526_;
  wire _0527_;
  wire _0528_;
  wire _0529_;
  wire _0530_;
  wire _0531_;
  wire _0532_;
  wire _0533_;
  wire _0534_;
  wire _0535_;
  wire _0536_;
  wire _0537_;
  wire _0538_;
  wire _0539_;
  wire _0540_;
  wire _0541_;
  wire _0542_;
  wire _0543_;
  wire _0544_;
  wire _0545_;
  wire _0546_;
  wire _0547_;
  wire _0548_;
  wire _0549_;
  wire _0550_;
  wire _0551_;
  wire [4:0] _0552_;
  wire _0553_;
  wire _0554_;
  wire _0555_;
  wire _0556_;
  wire _0557_;
  wire _0558_;
  wire _0559_;
  wire _0560_;
  wire _0561_;
  wire _0562_;
  wire _0563_;
  wire _0564_;
  wire _0565_;
  wire _0566_;
  wire _0567_;
  wire _0568_;
  wire _0569_;
  wire _0570_;
  wire _0571_;
  wire _0572_;
  wire _0573_;
  wire _0574_;
  wire _0575_;
  wire _0576_;
  wire _0577_;
  wire _0578_;
  wire _0579_;
  wire _0580_;
  wire _0581_;
  wire _0582_;
  wire _0583_;
  wire _0584_;
  wire _0585_;
  wire _0586_;
  wire _0587_;
  wire _0588_;
  wire _0589_;
  wire _0590_;
  wire _0591_;
  wire _0592_;
  wire _0593_;
  wire _0594_;
  wire _0595_;
  wire _0596_;
  wire _0597_;
  wire _0598_;
  wire _0599_;
  wire _0600_;
  wire _0601_;
  wire _0602_;
  wire [4:0] _0603_;
  wire _0604_;
  wire _0605_;
  wire _0606_;
  wire _0607_;
  wire _0608_;
  wire _0609_;
  wire _0610_;
  wire _0611_;
  wire [4:0] _0612_;
  wire _0613_;
  wire _0614_;
  wire _0615_;
  wire _0616_;
  wire _0617_;
  wire _0618_;
  wire _0619_;
  wire _0620_;
  wire _0621_;
  wire _0622_;
  wire _0623_;
  wire _0624_;
  wire _0625_;
  wire _0626_;
  wire _0627_;
  wire _0628_;
  wire _0629_;
  wire _0630_;
  wire _0631_;
  wire _0632_;
  wire _0633_;
  wire _0634_;
  wire [1:0] _0635_;
  wire _0636_;
  wire _0637_;
  wire _0638_;
  wire _0639_;
  wire _0640_;
  wire _0641_;
  wire _0642_;
  wire _0643_;
  wire _0644_;
  wire _0645_;
  wire _0646_;
  wire _0647_;
  wire _0648_;
  wire _0649_;
  wire _0650_;
  wire _0651_;
  wire _0652_;
  wire _0653_;
  wire _0654_;
  wire _0655_;
  wire _0656_;
  wire _0657_;
  wire _0658_;
  wire _0659_;
  wire _0660_;
  wire _0661_;
  wire _0662_;
  wire _0663_;
  wire _0664_;
  wire _0665_;
  wire _0666_;
  wire _0667_;
  wire _0668_;
  wire _0669_;
  wire _0670_;
  wire _0671_;
  wire _0672_;
  wire _0673_;
  wire _0674_;
  wire _0675_;
  wire _0676_;
  wire _0677_;
  wire _0678_;
  wire _0679_;
  wire _0680_;
  wire _0681_;
  wire _0682_;
  wire _0683_;
  wire _0684_;
  wire _0685_;
  wire _0686_;
  wire _0687_;
  wire _0688_;
  wire _0689_;
  wire _0690_;
  wire _0691_;
  wire _0692_;
  wire _0693_;
  wire _0694_;
  wire _0695_;
  wire _0696_;
  wire _0697_;
  wire _0698_;
  wire _0699_;
  wire _0700_;
  wire _0701_;
  wire _0702_;
  wire _0703_;
  wire _0704_;
  wire _0705_;
  wire _0706_;
  wire _0707_;
  wire _0708_;
  wire _0709_;
  wire _0710_;
  wire _0711_;
  wire _0712_;
  wire _0713_;
  wire _0714_;
  wire _0715_;
  wire _0716_;
  wire _0717_;
  wire _0718_;
  wire _0719_;
  wire _0720_;
  wire _0721_;
  wire _0722_;
  wire _0723_;
  wire _0724_;
  wire _0725_;
  wire _0726_;
  wire _0727_;
  wire _0728_;
  wire _0729_;
  wire [3:0] _0730_;
  wire _0731_;
  wire _0732_;
  wire _0733_;
  wire _0734_;
  wire _0735_;
  wire [4:0] _0736_;
  wire _0737_;
  wire _0738_;
  wire _0739_;
  wire _0740_;
  wire _0741_;
  wire _0742_;
  wire _0743_;
  wire _0744_;
  wire _0745_;
  wire _0746_;
  wire _0747_;
  wire _0748_;
  wire _0749_;
  wire _0750_;
  wire _0751_;
  wire _0752_;
  wire _0753_;
  wire _0754_;
  wire _0755_;
  wire _0756_;
  wire _0757_;
  wire _0758_;
  wire _0759_;
  wire _0760_;
  wire _0761_;
  wire _0762_;
  wire _0763_;
  wire _0764_;
  wire [9:0] _0765_;
  wire _0766_;
  wire [9:0] _0767_;
  wire _0768_;
  wire [3:0] _0769_;
  wire _0770_;
  wire [3:0] _0771_;
  wire _0772_;
  wire [1:0] _0773_;
  wire _0774_;
  wire [1:0] _0775_;
  wire _0776_;
  wire [12:0] _0777_;
  wire _0778_;
  wire [12:0] _0779_;
  wire _0780_;
  wire [12:0] _0781_;
  wire _0782_;
  wire [12:0] _0783_;
  wire _0784_;
  wire [12:0] _0785_;
  wire _0786_;
  wire [12:0] _0787_;
  wire _0788_;
  wire _0789_;
  wire _0790_;
  wire _0791_;
  wire _0792_;
  wire _0793_;
  wire _0794_;
  wire _0795_;
  wire _0796_;
  wire _0797_;
  wire _0798_;
  wire [12:0] _0799_;
  wire _0800_;
  wire [12:0] _0801_;
  wire _0802_;
  wire [12:0] _0803_;
  wire _0804_;
  wire [12:0] _0805_;
  wire _0806_;
  wire _0807_;
  wire _0808_;
  wire _0809_;
  wire _0810_;
  wire _0811_;
  wire _0812_;
  wire _0813_;
  wire _0814_;
  wire _0815_;
  wire _0816_;
  wire _0817_;
  wire [12:0] _0818_;
  wire _0819_;
  wire [12:0] _0820_;
  wire _0821_;
  wire [12:0] _0822_;
  wire _0823_;
  wire _0824_;
  wire [12:0] _0825_;
  wire _0826_;
  wire _0827_;
  wire _0828_;
  wire _0829_;
  wire _0830_;
  wire _0831_;
  wire _0832_;
  wire _0833_;
  wire _0834_;
  wire _0835_;
  wire _0836_;
  wire _0837_;
  wire _0838_;
  wire [12:0] _0839_;
  wire _0840_;
  wire [12:0] _0841_;
  wire _0842_;
  wire [12:0] _0843_;
  wire _0844_;
  wire [12:0] _0845_;
  wire _0846_;
  wire _0847_;
  wire _0848_;
  wire _0849_;
  wire _0850_;
  wire _0851_;
  wire _0852_;
  wire _0853_;
  wire _0854_;
  wire _0855_;
  wire _0856_;
  wire [11:0] _0857_;
  wire _0858_;
  wire [11:0] _0859_;
  wire _0860_;
  wire [2:0] _0861_;
  wire _0862_;
  wire [2:0] _0863_;
  wire _0864_;
  wire [3:0] _0865_;
  wire _0866_;
  wire [3:0] _0867_;
  wire _0868_;
  wire [2:0] _0869_;
  wire _0870_;
  wire [2:0] _0871_;
  wire _0872_;
  wire [2:0] _0873_;
  wire _0874_;
  wire [2:0] _0875_;
  wire _0876_;
  wire [13:0] _0877_;
  wire _0878_;
  wire [13:0] _0879_;
  wire _0880_;
  wire [15:0] _0881_;
  wire _0882_;
  wire [1:0] _0883_;
  wire _0884_;
  wire [1:0] _0885_;
  wire _0886_;
  wire _0887_;
  wire _0888_;
  wire _0889_;
  wire _0890_;
  wire _0891_;
  wire _0892_;
  wire _0893_;
  wire _0894_;
  wire _0895_;
  wire _0896_;
  wire _0897_;
  wire _0898_;
  wire _0899_;
  wire _0900_;
  wire _0901_;
  wire _0902_;
  wire [4:0] _0903_;
  wire _0904_;
  wire [4:0] _0905_;
  wire _0906_;
  wire _0907_;
  wire _0908_;
  wire _0909_;
  wire _0910_;
  wire [1:0] _0911_;
  wire _0912_;
  wire [1:0] _0913_;
  wire _0914_;
  wire _0915_;
  wire _0916_;
  wire _0917_;
  wire _0918_;
  wire _0919_;
  wire _0920_;
  wire _0921_;
  wire _0922_;
  wire _0923_;
  wire _0924_;
  wire _0925_;
  wire _0926_;
  wire _0927_;
  wire _0928_;
  wire _0929_;
  wire _0930_;
  wire _0931_;
  wire _0932_;
  wire [4:0] _0933_;
  wire _0934_;
  wire [4:0] _0935_;
  wire _0936_;
  wire _0937_;
  wire _0938_;
  wire _0939_;
  wire _0940_;
  wire _0941_;
  wire _0942_;
  wire _0943_;
  wire _0944_;
  wire _0945_;
  wire _0946_;
  wire _0947_;
  wire _0948_;
  wire [4:0] _0949_;
  wire _0950_;
  wire [4:0] _0951_;
  wire _0952_;
  wire _0953_;
  wire _0954_;
  wire _0955_;
  wire _0956_;
  wire _0957_;
  wire _0958_;
  wire _0959_;
  wire _0960_;
  wire _0961_;
  wire _0962_;
  wire _0963_;
  wire _0964_;
  wire [1:0] _0965_;
  wire _0966_;
  wire [1:0] _0967_;
  wire _0968_;
  wire _0969_;
  wire _0970_;
  wire _0971_;
  wire _0972_;
  wire _0973_;
  wire _0974_;
  wire _0975_;
  wire _0976_;
  wire _0977_;
  wire _0978_;
  wire _0979_;
  wire _0980_;
  wire _0981_;
  wire _0982_;
  wire _0983_;
  wire _0984_;
  wire _0985_;
  wire _0986_;
  wire [4:0] _0987_;
  wire _0988_;
  wire [4:0] _0989_;
  wire _0990_;
  wire _0991_;
  wire _0992_;
  wire _0993_;
  wire _0994_;
  wire _0995_;
  wire _0996_;
  wire _0997_;
  wire _0998_;
  wire _0999_;
  wire _1000_;
  wire _1001_;
  wire _1002_;
  wire [1:0] _1003_;
  wire _1004_;
  wire [1:0] _1005_;
  wire _1006_;
  wire _1007_;
  wire _1008_;
  wire _1009_;
  wire _1010_;
  wire _1011_;
  wire _1012_;
  wire _1013_;
  wire _1014_;
  wire _1015_;
  wire _1016_;
  wire _1017_;
  wire _1018_;
  wire _1019_;
  wire _1020_;
  wire _1021_;
  wire _1022_;
  wire [4:0] _1023_;
  wire _1024_;
  wire [4:0] _1025_;
  wire _1026_;
  wire _1027_;
  wire _1028_;
  wire _1029_;
  wire _1030_;
  wire [1:0] _1031_;
  wire _1032_;
  wire [1:0] _1033_;
  wire _1034_;
  wire _1035_;
  wire _1036_;
  wire _1037_;
  wire _1038_;
  wire _1039_;
  wire _1040_;
  wire _1041_;
  wire _1042_;
  wire _1043_;
  wire _1044_;
  wire _1045_;
  wire _1046_;
  wire _1047_;
  wire _1048_;
  wire _1049_;
  wire _1050_;
  wire [13:0] _1051_;
  wire [2:0] _1052_;
  wire [2:0] _1053_;
  wire [3:0] _1054_;
  wire [2:0] _1055_;
  wire [11:0] _1056_;
  wire [15:0] _1057_;
  reg [2:0] activate_counter;
  wire activate_done;
  reg active0;
  reg active1;
  reg active2;
  reg active3;
  wire adr_load_A10;
  wire adr_load_evictcolumn;
  wire adr_load_evictrow;
  wire adr_load_mode;
  wire adr_load_refillcolumn;
  wire adr_load_refillrow;
  reg [3:0] autorefresh_counter;
  wire autorefresh_done;
  reg [3:0] burst_counter;
  wire burst_finished;
  wire burst_last;
  output [11:0] cache_adr;
  wire [11:0] cache_adr;
  reg [9:0] cache_adr_msb;
  input [31:0] cache_dat_i;
  wire [31:0] cache_dat_i;
  output [31:0] cache_dat_o;
  wire [31:0] cache_dat_o;
  output [3:0] cache_we;
  wire [3:0] cache_we;
  output command_ack;
  wire command_ack;
  input command_evict;
  wire command_evict;
  reg command_evict_pending;
  input command_refill;
  wire command_refill;
  reg command_refill_pending;
  reg [15:0] dq;
  input [20:0] evict_adr;
  wire [20:0] evict_adr;
  wire [1:0] evict_bank;
  wire [8:0] evict_column;
  wire evict_needs_rowswitch;
  reg evict_needs_rowswitch_r;
  wire [12:0] evict_row;
  reg [13:0] init_counter;
  wire init_done;
  wire load_cache_msb_evict;
  wire load_cache_msb_refill;
  wire load_track_with_evict;
  wire load_track_with_refill;
  wire needs_refresh;
  wire [3:0] next_burst_counter;
  wire [4:0] next_state;
  reg [12:0] openrow0;
  reg [12:0] openrow1;
  reg [12:0] openrow2;
  reg [12:0] openrow3;
  reg [2:0] precharge_counter;
  wire precharge_done;
  reg [2:0] prechargeall_counter;
  wire prechargeall_done;
  input [20:0] refill_adr;
  wire [20:0] refill_adr;
  wire [1:0] refill_bank;
  wire [8:0] refill_column;
  wire refill_needs_rowswitch;
  reg refill_needs_rowswitch_r;
  wire [12:0] refill_row;
  reg [11:0] refresh_counter;
  wire reload_activate_counter;
  wire reload_autorefresh_counter;
  wire reload_burst_counter;
  wire reload_init_counter;
  wire reload_precharge_counter;
  wire reload_prechargeall_counter;
  wire reload_refresh_counter;
  output [12:0] sdram_adr;
  reg [12:0] sdram_adr;
  output [1:0] sdram_ba;
  reg [1:0] sdram_ba;
  wire [1:0] sdram_ba_r;
  output sdram_cas_n;
  reg sdram_cas_n;
  wire sdram_cas_n_r;
  output sdram_cke;
  reg sdram_cke;
  wire sdram_cke_r;
  input sdram_clk;
  wire sdram_clk;
  output sdram_cs_n;
  reg sdram_cs_n;
  wire sdram_cs_n_r;
  inout [15:0] sdram_dq;
  wire [15:0] sdram_dq;
  wire sdram_dq_drive;
  reg [15:0] sdram_dq_in;
  wire [15:0] sdram_dq_out;
  output [1:0] sdram_dqm;
  reg [1:0] sdram_dqm;
  wire sdram_dqm_r;
  output sdram_ras_n;
  reg sdram_ras_n;
  wire sdram_ras_n_r;
  input sdram_rst;
  wire sdram_rst;
  output sdram_we_n;
  reg sdram_we_n;
  wire sdram_we_n_r;
  reg [4:0] state;
  reg [1:0] track_bank;
  wire track_close;
  wire track_closeall;
  wire track_open;
  reg [12:0] track_row;
  assign _0218_ = burst_counter + 1'h1;
  assign _0220_ = { adr_load_evictrow, adr_load_evictrow, adr_load_evictrow, adr_load_evictrow, adr_load_evictrow, adr_load_evictrow, adr_load_evictrow, adr_load_evictrow, adr_load_evictrow, adr_load_evictrow, adr_load_evictrow, adr_load_evictrow, adr_load_evictrow } & evict_row;
  assign _0221_ = { adr_load_evictcolumn, adr_load_evictcolumn, adr_load_evictcolumn, adr_load_evictcolumn, adr_load_evictcolumn, adr_load_evictcolumn, adr_load_evictcolumn, adr_load_evictcolumn, adr_load_evictcolumn, adr_load_evictcolumn, adr_load_evictcolumn, adr_load_evictcolumn, adr_load_evictcolumn } & { 4'h0, evict_column };
  assign _0222_ = { adr_load_refillrow, adr_load_refillrow, adr_load_refillrow, adr_load_refillrow, adr_load_refillrow, adr_load_refillrow, adr_load_refillrow, adr_load_refillrow, adr_load_refillrow, adr_load_refillrow, adr_load_refillrow, adr_load_refillrow, adr_load_refillrow } & refill_row;
  assign _0223_ = { adr_load_refillcolumn, adr_load_refillcolumn, adr_load_refillcolumn, adr_load_refillcolumn, adr_load_refillcolumn, adr_load_refillcolumn, adr_load_refillcolumn, adr_load_refillcolumn, adr_load_refillcolumn, adr_load_refillcolumn, adr_load_refillcolumn, adr_load_refillcolumn, adr_load_refillcolumn } & { 4'h0, refill_column };
  assign _0225_ = _0248_ & _0287_;
  assign _0226_ = _0249_ & _0291_;
  assign _0227_ = _0250_ & _0292_;
  assign _0228_ = _0251_ & _0293_;
  assign _0229_ = _0252_ & _0294_;
  assign _0230_ = _0253_ & _0298_;
  assign _0231_ = _0254_ & _0299_;
  assign _0232_ = _0255_ & _0300_;
  assign _0233_ = burst_counter[0] & burst_counter[1];
  assign _0234_ = _0233_ & burst_counter[2];
  assign _0242_ = ! init_counter;
  assign _0243_ = ! prechargeall_counter;
  assign _0244_ = ! precharge_counter;
  assign _0245_ = ! autorefresh_counter;
  assign _0246_ = ! activate_counter;
  assign _0247_ = ! refresh_counter;
  assign _0248_ = ! evict_bank;
  assign _0249_ = evict_bank == 2'h1;
  assign _0250_ = evict_bank == 2'h2;
  assign _0251_ = evict_bank == 2'h3;
  assign _0252_ = ! refill_bank;
  assign _0253_ = refill_bank == 2'h1;
  assign _0254_ = refill_bank == 2'h2;
  assign _0255_ = refill_bank == 2'h3;
  assign _0256_ = openrow0 != evict_row;
  assign _0257_ = openrow1 != evict_row;
  assign _0258_ = openrow2 != evict_row;
  assign _0259_ = openrow3 != evict_row;
  assign _0260_ = openrow0 != refill_row;
  assign _0261_ = openrow1 != refill_row;
  assign _0262_ = openrow2 != refill_row;
  assign _0263_ = openrow3 != refill_row;
  assign _0264_ = state != next_state;
  assign _0265_ = ~ init_done;
  assign _0266_ = ~ prechargeall_done;
  assign _0267_ = ~ precharge_done;
  assign _0268_ = ~ autorefresh_done;
  assign _0269_ = ~ activate_done;
  assign _0270_ = ~ needs_refresh;
  assign _0271_ = ~ active0;
  assign _0272_ = ~ active1;
  assign _0273_ = ~ active2;
  assign _0274_ = ~ active3;
  assign _0275_ = ~ active0;
  assign _0276_ = ~ active1;
  assign _0277_ = ~ active2;
  assign _0278_ = ~ active3;
  assign _0279_ = ~ burst_finished;
  assign _0280_ = ~ burst_counter[0];
  assign _0281_ = ~ burst_counter[0];
  assign _0282_ = _0286_ | _0222_;
  assign _0283_ = _0282_ | _0223_;
  assign _0284_ = _0283_ | _0224_;
  assign _0285_ = _0219_ | _0220_;
  assign _0286_ = _0285_ | _0221_;
  assign _0287_ = _0256_ | _0271_;
  assign _0288_ = _0225_ | _0226_;
  assign _0289_ = _0288_ | _0227_;
  assign _0290_ = _0289_ | _0228_;
  assign _0291_ = _0257_ | _0272_;
  assign _0292_ = _0258_ | _0273_;
  assign _0293_ = _0259_ | _0274_;
  assign _0294_ = _0260_ | _0275_;
  assign _0295_ = _0229_ | _0230_;
  assign _0296_ = _0295_ | _0231_;
  assign _0297_ = _0296_ | _0232_;
  assign _0298_ = _0261_ | _0276_;
  assign _0299_ = _0262_ | _0277_;
  assign _0300_ = _0263_ | _0278_;
  assign _0301_ = sdram_rst | command_ack;
  assign _0302_ = command_evict | command_evict_pending;
  assign _0303_ = command_refill | command_refill_pending;
  always @(posedge sdram_clk)
    state <= _0736_;
  always @(posedge sdram_clk)
    command_evict_pending <= _0749_;
  always @(posedge sdram_clk)
    command_refill_pending <= _0745_;
  always @(posedge sdram_clk)
    cache_adr_msb <= _0767_;
  always @(posedge sdram_clk)
    burst_counter <= _0771_;
  always @(posedge sdram_clk)
    refill_needs_rowswitch_r <= _0297_;
  always @(posedge sdram_clk)
    evict_needs_rowswitch_r <= _0290_;
  always @(posedge sdram_clk)
    track_row <= _0779_;
  always @(posedge sdram_clk)
    track_bank <= _0775_;
  always @(posedge sdram_clk)
    active0 <= _0855_;
  always @(posedge sdram_clk)
    openrow0 <= _0845_;
  always @(posedge sdram_clk)
    active1 <= _0836_;
  always @(posedge sdram_clk)
    openrow1 <= _0825_;
  always @(posedge sdram_clk)
    active2 <= _0815_;
  always @(posedge sdram_clk)
    openrow2 <= _0805_;
  always @(posedge sdram_clk)
    active3 <= _0797_;
  always @(posedge sdram_clk)
    openrow3 <= _0787_;
  always @(posedge sdram_clk)
    refresh_counter <= _0859_;
  always @(posedge sdram_clk)
    activate_counter <= _0863_;
  always @(posedge sdram_clk)
    autorefresh_counter <= _0867_;
  always @(posedge sdram_clk)
    precharge_counter <= _0871_;
  always @(posedge sdram_clk)
    prechargeall_counter <= _0875_;
  always @(posedge sdram_clk)
    init_counter <= _0879_;
  always @(posedge sdram_clk)
    sdram_adr <= _0284_;
  always @(posedge sdram_clk)
    dq <= _0881_;
  always @(posedge sdram_clk)
    sdram_dq_in <= dq;
  always @(posedge sdram_clk)
    sdram_cke <= _0716_;
  always @(posedge sdram_clk)
    sdram_cs_n <= _0703_;
  always @(posedge sdram_clk)
    sdram_we_n <= _0690_;
  always @(posedge sdram_clk)
    sdram_cas_n <= _0678_;
  always @(posedge sdram_clk)
    sdram_ras_n <= _0665_;
  always @(posedge sdram_clk)
    sdram_dqm <= { _0645_, _0645_ };
  always @(posedge sdram_clk)
    sdram_ba <= _0635_;
  assign _0304_ = _0305_ ? 1'h1 : 1'hx;
  assign _0305_ = state == 5'h09;
  assign _0306_ = _0307_ ? 5'h05 : state;
  assign _0308_ = _0309_ ? _0306_ : 5'hxx;
  assign _0309_ = state == 5'h08;
  assign _0310_ = _0311_ ? 1'h1 : 1'h0;
  assign _0312_ = _0313_ ? _0310_ : 1'hx;
  assign _0313_ = state == 5'h08;
  assign _0314_ = _0315_ ? 5'h08 : state;
  assign _0316_ = _0317_ ? _0314_ : 5'hxx;
  assign _0317_ = state == 5'h07;
  assign _0318_ = _0319_ ? 1'h1 : 1'h0;
  assign _0320_ = _0321_ ? _0318_ : 1'hx;
  assign _0321_ = state == 5'h07;
  assign _0322_ = _0323_ ? 1'h0 : 1'h1;
  assign _0324_ = _0325_ ? _0322_ : 1'hx;
  assign _0325_ = state == 5'h07;
  assign _0326_ = _0327_ ? 1'h1 : 1'hx;
  assign _0327_ = state == 5'h07;
  assign _0328_ = _0329_ ? 1'h0 : 1'h1;
  assign _0330_ = _0331_ ? _0328_ : 1'hx;
  assign _0331_ = state == 5'h07;
  assign _0336_ = _0337_ ? 5'h05 : state;
  assign _0332_ = _0333_ ? 1'h0 : 1'h1;
  assign _0334_ = _0335_ ? _0332_ : 1'hx;
  assign _0335_ = state == 5'h07;
  assign _0340_ = _0343_ ? _0336_ : 5'hxx;
  assign _0338_ = _0339_ ? 1'h0 : 1'hx;
  assign _0339_ = state == 5'h07;
  assign _0341_ = _0342_ ? 1'h1 : 1'hx;
  assign _0342_ = state == 5'h07;
  assign _0343_ = state == 5'h14;
  assign _0344_ = _0345_ ? 5'h0d : state;
  assign _0352_ = _0353_ ? 1'h1 : 1'h0;
  assign _0346_ = _0347_ ? 5'hxx : _0344_;
  assign _0348_ = _0349_ ? 5'hxx : _0346_;
  assign _0350_ = _0351_ ? _0348_ : 5'hxx;
  assign _0351_ = state == 5'h05;
  assign _0358_ = _0363_ ? _0352_ : 1'hx;
  assign _0354_ = _0355_ ? 1'h1 : 1'h0;
  assign _0356_ = _0357_ ? 1'hx : _0354_;
  assign _0359_ = _0360_ ? 1'hx : _0356_;
  assign _0361_ = _0362_ ? _0359_ : 1'hx;
  assign _0362_ = state == 5'h05;
  assign _0363_ = state == 5'h14;
  assign _0364_ = _0365_ ? 5'h09 : _0202_;
  assign _0366_ = _0367_ ? 5'hxx : _0364_;
  assign _0368_ = _0369_ ? _0366_ : 5'hxx;
  assign _0369_ = state == 5'h05;
  assign _0370_ = _0375_ ? 1'h1 : 1'h0;
  assign _0371_ = _0372_ ? 1'h1 : 1'h0;
  assign _0373_ = _0374_ ? 1'hx : _0371_;
  assign _0378_ = _0380_ ? _0370_ : 1'hx;
  assign _0376_ = _0377_ ? _0373_ : 1'hx;
  assign _0377_ = state == 5'h05;
  assign _0379_ = _0381_ ? 1'h0 : _0167_;
  assign _0380_ = state == 5'h14;
  assign _0382_ = _0383_ ? 1'hx : _0379_;
  assign _0384_ = _0385_ ? _0382_ : 1'hx;
  assign _0385_ = state == 5'h05;
  assign _0390_ = _0391_ ? 4'h0 : { burst_counter[0], burst_counter[0], _0281_, _0280_ };
  assign _0386_ = _0387_ ? 5'h06 : _0194_;
  assign _0388_ = _0389_ ? _0386_ : 5'hxx;
  assign _0389_ = state == 5'h05;
  assign _0396_ = _0397_ ? _0390_ : 4'hx;
  assign _0392_ = _0393_ ? 1'h0 : _0152_;
  assign _0394_ = _0395_ ? _0392_ : 1'hx;
  assign _0395_ = state == 5'h05;
  assign _0397_ = state == 5'h14;
  assign _0398_ = _0399_ ? 1'h0 : _0151_;
  assign _0400_ = _0401_ ? _0398_ : 1'hx;
  assign _0401_ = state == 5'h05;
  assign _0402_ = _0403_ ? 5'h05 : state;
  assign _0404_ = _0405_ ? _0402_ : 5'hxx;
  assign _0405_ = state == 5'h04;
  assign _0406_ = _0407_ ? 1'h1 : 1'h0;
  assign _0408_ = _0409_ ? _0406_ : 1'hx;
  assign _0409_ = state == 5'h04;
  assign _0414_ = _0415_ ? 5'h10 : state;
  assign _0410_ = _0411_ ? 1'h1 : 1'h0;
  assign _0412_ = _0413_ ? _0410_ : 1'hx;
  assign _0413_ = state == 5'h04;
  assign _0418_ = _0419_ ? _0414_ : 5'hxx;
  assign _0416_ = _0417_ ? 2'h0 : 2'hx;
  assign _0417_ = state == 5'h04;
  assign _0419_ = state == 5'h0f;
  assign _0420_ = _0421_ ? 1'h0 : 1'h1;
  assign _0422_ = _0423_ ? _0420_ : 1'hx;
  assign _0423_ = state == 5'h04;
  assign _0424_ = _0425_ ? 1'h0 : 1'h1;
  assign _0426_ = _0427_ ? _0424_ : 1'hx;
  assign _0427_ = state == 5'h04;
  assign _0428_ = _0429_ ? 1'h0 : 1'h1;
  assign _0430_ = _0431_ ? _0428_ : 1'hx;
  assign _0431_ = state == 5'h04;
  assign _0436_ = _0437_ ? 1'h1 : 1'h0;
  assign _0432_ = _0433_ ? 1'h0 : 1'h1;
  assign _0434_ = _0435_ ? _0432_ : 1'hx;
  assign _0435_ = state == 5'h04;
  assign _0440_ = _0441_ ? _0436_ : 1'hx;
  assign _0438_ = _0439_ ? 1'h0 : 1'hx;
  assign _0439_ = state == 5'h04;
  assign _0441_ = state == 5'h0f;
  assign _0442_ = _0443_ ? 1'h1 : 1'hx;
  assign _0443_ = state == 5'h04;
  assign _0444_ = _0445_ ? 5'h04 : state;
  assign _0446_ = _0447_ ? _0444_ : 5'hxx;
  assign _0447_ = state == 5'h03;
  assign _0448_ = _0449_ ? 1'h1 : 1'h0;
  assign _0450_ = _0451_ ? _0448_ : 1'hx;
  assign _0451_ = state == 5'h03;
  assign _0456_ = _0457_ ? refill_adr[1:0] : 2'h0;
  assign _0452_ = _0453_ ? 1'h0 : 1'h1;
  assign _0454_ = _0455_ ? _0452_ : 1'hx;
  assign _0455_ = state == 5'h03;
  assign _0460_ = _0461_ ? _0456_ : 2'hx;
  assign _0458_ = _0459_ ? 1'h1 : 1'hx;
  assign _0459_ = state == 5'h03;
  assign _0461_ = state == 5'h0f;
  assign _0462_ = _0463_ ? 1'h0 : 1'h1;
  assign _0464_ = _0465_ ? _0462_ : 1'hx;
  assign _0465_ = state == 5'h03;
  assign _0466_ = _0467_ ? 1'h0 : 1'h1;
  assign _0468_ = _0469_ ? _0466_ : 1'hx;
  assign _0469_ = state == 5'h03;
  assign _0470_ = _0471_ ? 1'h0 : 1'hx;
  assign _0471_ = state == 5'h03;
  assign _0474_ = _0475_ ? 1'h0 : 1'h1;
  assign _0472_ = _0473_ ? 1'h1 : 1'hx;
  assign _0473_ = state == 5'h03;
  assign _0479_ = _0481_ ? _0474_ : 1'hx;
  assign _0476_ = _0477_ ? 5'h03 : state;
  assign _0478_ = _0480_ ? _0476_ : 5'hxx;
  assign _0480_ = state == 5'h02;
  assign _0481_ = state == 5'h0f;
  assign _0482_ = _0483_ ? 1'h1 : 1'h0;
  assign _0484_ = _0485_ ? _0482_ : 1'hx;
  assign _0485_ = state == 5'h02;
  assign _0486_ = _0487_ ? 1'h0 : 1'h1;
  assign _0488_ = _0489_ ? _0486_ : 1'hx;
  assign _0489_ = state == 5'h02;
  assign _0490_ = _0491_ ? 1'h1 : 1'hx;
  assign _0491_ = state == 5'h02;
  assign _0496_ = _0497_ ? 1'h1 : 1'hx;
  assign _0492_ = _0493_ ? 1'h0 : 1'h1;
  assign _0494_ = _0495_ ? _0492_ : 1'hx;
  assign _0495_ = state == 5'h02;
  assign _0497_ = state == 5'h0f;
  assign _0498_ = _0499_ ? 1'h0 : 1'h1;
  assign _0500_ = _0501_ ? _0498_ : 1'hx;
  assign _0501_ = state == 5'h02;
  assign _0502_ = _0503_ ? 1'h0 : 1'hx;
  assign _0503_ = state == 5'h02;
  assign _0504_ = _0505_ ? 1'h1 : 1'hx;
  assign _0505_ = state == 5'h02;
  assign _0509_ = _0511_ ? 1'h0 : 1'h1;
  assign _0506_ = _0507_ ? 5'h02 : state;
  assign _0508_ = _0510_ ? _0506_ : 5'hxx;
  assign _0510_ = state == 5'h01;
  assign _0512_ = _0517_ ? _0509_ : 1'hx;
  assign _0513_ = _0514_ ? 1'h1 : 1'h0;
  assign _0515_ = _0516_ ? _0513_ : 1'hx;
  assign _0516_ = state == 5'h01;
  assign _0517_ = state == 5'h0f;
  assign _0518_ = _0519_ ? 1'h1 : 1'h0;
  assign _0520_ = _0521_ ? _0518_ : 1'hx;
  assign _0521_ = state == 5'h01;
  assign _0522_ = _0523_ ? 1'h1 : 1'h0;
  assign _0524_ = _0525_ ? _0522_ : 1'hx;
  assign _0525_ = state == 5'h01;
  assign _0526_ = _0527_ ? 2'h0 : 2'hx;
  assign _0527_ = state == 5'h01;
  assign _0528_ = _0533_ ? 1'h1 : 1'hx;
  assign _0529_ = _0530_ ? 1'h0 : 1'h1;
  assign _0531_ = _0532_ ? _0529_ : 1'hx;
  assign _0532_ = state == 5'h01;
  assign _0533_ = state == 5'h0f;
  assign _0534_ = _0535_ ? 1'h0 : 1'h1;
  assign _0536_ = _0537_ ? _0534_ : 1'hx;
  assign _0537_ = state == 5'h01;
  assign _0538_ = _0539_ ? 1'h1 : 1'hx;
  assign _0539_ = state == 5'h01;
  assign _0540_ = _0541_ ? 1'h0 : 1'h1;
  assign _0542_ = _0543_ ? _0540_ : 1'hx;
  assign _0543_ = state == 5'h01;
  assign _0544_ = _0547_ ? 1'h0 : 1'hx;
  assign _0545_ = _0546_ ? 1'h0 : 1'hx;
  assign _0546_ = state == 5'h01;
  assign _0547_ = state == 5'h0f;
  assign _0548_ = _0549_ ? 1'h0 : 1'h1;
  assign _0550_ = _0551_ ? _0548_ : 1'hx;
  assign _0551_ = state == 5'h01;
  function [4:0] _1367_;
    input [4:0] a;
    input [104:0] b;
    input [20:0] s;
    casez (s) // synopsys parallel_case
      21'b????????????????????1:
        _1367_ = b[4:0];
      21'b???????????????????1?:
        _1367_ = b[9:5];
      21'b??????????????????1??:
        _1367_ = b[14:10];
      21'b?????????????????1???:
        _1367_ = b[19:15];
      21'b????????????????1????:
        _1367_ = b[24:20];
      21'b???????????????1?????:
        _1367_ = b[29:25];
      21'b??????????????1??????:
        _1367_ = b[34:30];
      21'b?????????????1???????:
        _1367_ = b[39:35];
      21'b????????????1????????:
        _1367_ = b[44:40];
      21'b???????????1?????????:
        _1367_ = b[49:45];
      21'b??????????1??????????:
        _1367_ = b[54:50];
      21'b?????????1???????????:
        _1367_ = b[59:55];
      21'b????????1????????????:
        _1367_ = b[64:60];
      21'b???????1?????????????:
        _1367_ = b[69:65];
      21'b??????1??????????????:
        _1367_ = b[74:70];
      21'b?????1???????????????:
        _1367_ = b[79:75];
      21'b????1????????????????:
        _1367_ = b[84:80];
      21'b???1?????????????????:
        _1367_ = b[89:85];
      21'b??1??????????????????:
        _1367_ = b[94:90];
      21'b?1???????????????????:
        _1367_ = b[99:95];
      21'b1????????????????????:
        _1367_ = b[104:100];
      default:
        _1367_ = a;
    endcase
  endfunction
  assign _0552_ = _1367_(state, { 5'h01, _0134_, _0153_, _0168_, _0178_, _0186_, 5'h07, _0210_, _0065_, _0072_, _0079_, _0086_, _0088_, _0090_, _0091_, _0092_, 20'h8ca74, _0093_ }, { _0573_, _0572_, _0571_, _0570_, _0569_, _0568_, _0567_, _0566_, _0565_, _0564_, _0563_, _0562_, _0561_, _0560_, _0559_, _0558_, _0557_, _0556_, _0555_, _0554_, _0553_ });
  assign _0553_ = state == 5'h14;
  assign _0554_ = state == 5'h13;
  assign _0555_ = state == 5'h12;
  assign _0556_ = state == 5'h11;
  assign _0557_ = state == 5'h10;
  assign _0558_ = state == 5'h0f;
  assign _0559_ = state == 5'h0e;
  assign _0560_ = state == 5'h0d;
  assign _0561_ = state == 5'h0c;
  assign _0562_ = state == 5'h0b;
  assign _0563_ = state == 5'h0a;
  assign _0564_ = state == 5'h09;
  assign _0565_ = state == 5'h08;
  assign _0566_ = state == 5'h07;
  assign _0567_ = state == 5'h06;
  assign _0568_ = state == 5'h05;
  assign _0569_ = state == 5'h04;
  assign _0570_ = state == 5'h03;
  assign _0571_ = state == 5'h02;
  assign _0572_ = state == 5'h01;
  assign _0573_ = ! state;
  assign _0574_ = _0575_ ? 1'h1 : 1'h0;
  assign _0575_ = ! state;
  function [0:0] _1391_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1391_ = b[0:0];
      2'b1?:
        _1391_ = b[1:1];
      default:
        _1391_ = a;
    endcase
  endfunction
  assign _0576_ = _1391_(1'h0, { _0133_, _0177_ }, { _0578_, _0577_ });
  assign _0577_ = state == 5'h0c;
  assign _0578_ = state == 5'h05;
  assign _0579_ = _0586_ ? 1'h1 : 1'hx;
  assign _0580_ = _0581_ ? _0132_ : 1'h0;
  assign _0581_ = state == 5'h05;
  function [0:0] _1397_;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _1397_ = b[0:0];
      3'b?1?:
        _1397_ = b[1:1];
      3'b1??:
        _1397_ = b[2:2];
      default:
        _1397_ = a;
    endcase
  endfunction
  assign _0582_ = _1397_(1'h1, { _0137_, 2'h0 }, { _0585_, _0584_, _0583_ });
  assign _0583_ = state == 5'h14;
  assign _0584_ = state == 5'h0c;
  assign _0585_ = state == 5'h0b;
  assign _0586_ = state == 5'h0f;
  assign _0587_ = _0588_ ? 1'h1 : 1'h0;
  assign _0588_ = state == 5'h0d;
  assign _0589_ = _0590_ ? 1'h1 : 1'h0;
  assign _0590_ = state == 5'h09;
  function [0:0] _1406_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1406_ = b[0:0];
      2'b1?:
        _1406_ = b[1:1];
      default:
        _1406_ = a;
    endcase
  endfunction
  assign _0591_ = _1406_(1'h0, { _0149_, 1'h1 }, { _0593_, _0592_ });
  assign _0592_ = state == 5'h06;
  assign _0593_ = state == 5'h01;
  function [0:0] _1409_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1409_ = b[0:0];
      2'b1?:
        _1409_ = b[1:1];
      default:
        _1409_ = a;
    endcase
  endfunction
  assign _0594_ = _1409_(1'h0, { _0150_, _0166_ }, { _0596_, _0595_ });
  assign _0595_ = state == 5'h0e;
  assign _0596_ = state == 5'h0a;
  function [0:0] _1412_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1412_ = b[0:0];
      2'b1?:
        _1412_ = b[1:1];
      default:
        _1412_ = a;
    endcase
  endfunction
  assign _0597_ = _1412_(1'h0, { _0140_, _0157_ }, { _0599_, _0598_ });
  assign _0598_ = state == 5'h08;
  assign _0599_ = state == 5'h04;
  function [0:0] _1415_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1415_ = b[0:0];
      2'b1?:
        _1415_ = b[1:1];
      default:
        _1415_ = a;
    endcase
  endfunction
  assign _0600_ = _1415_(1'h0, { _0135_, _0154_ }, { _0602_, _0601_ });
  assign _0601_ = state == 5'h0e;
  assign _0602_ = state == 5'h0a;
  assign _0603_ = _0608_ ? 5'h0f : state;
  function [0:0] _1419_;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _1419_ = b[0:0];
      3'b?1?:
        _1419_ = b[1:1];
      3'b1??:
        _1419_ = b[2:2];
      default:
        _1419_ = a;
    endcase
  endfunction
  assign _0604_ = _1419_(1'h0, { _0136_, _0155_, _0169_ }, { _0607_, _0606_, _0605_ });
  assign _0605_ = state == 5'h07;
  assign _0606_ = state == 5'h03;
  assign _0607_ = state == 5'h02;
  assign _0612_ = _0613_ ? _0603_ : 5'hxx;
  function [0:0] _1424_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1424_ = b[0:0];
      2'b1?:
        _1424_ = b[1:1];
      default:
        _1424_ = a;
    endcase
  endfunction
  assign _0609_ = _1424_(1'h0, { _0138_, _0156_ }, { _0611_, _0610_ });
  assign _0610_ = state == 5'h0d;
  assign _0611_ = state == 5'h09;
  assign _0613_ = state == 5'h0e;
  function [0:0] _1428_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1428_ = b[0:0];
      2'b1?:
        _1428_ = b[1:1];
      default:
        _1428_ = a;
    endcase
  endfunction
  assign _0614_ = _1428_(1'h0, { _0139_, 1'h1 }, { _0616_, _0615_ });
  assign _0615_ = state == 5'h06;
  assign _0616_ = state == 5'h01;
  function [0:0] _1431_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1431_ = b[0:0];
      2'b1?:
        _1431_ = b[1:1];
      default:
        _1431_ = a;
    endcase
  endfunction
  assign _0617_ = _1431_(1'h0, { _0124_, 1'h1 }, { _0619_, _0618_ });
  assign _0618_ = state == 5'h06;
  assign _0619_ = state == 5'h01;
  assign _0620_ = _0621_ ? _0128_ : 1'h0;
  assign _0621_ = state == 5'h0f;
  assign _0622_ = _0623_ ? _0129_ : 1'h0;
  assign _0623_ = state == 5'h0e;
  assign _0624_ = _0625_ ? _0125_ : 1'h0;
  assign _0625_ = state == 5'h0b;
  assign _0626_ = _0627_ ? _0126_ : 1'h0;
  assign _0627_ = state == 5'h0a;
  assign _0630_ = _0634_ ? 1'h1 : 1'h0;
  assign _0628_ = _0629_ ? _0127_ : 1'h0;
  assign _0629_ = state == 5'h04;
  function [0:0] _1445_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1445_ = b[0:0];
      2'b1?:
        _1445_ = b[1:1];
      default:
        _1445_ = a;
    endcase
  endfunction
  assign _0631_ = _1445_(1'h0, { _0145_, _0162_ }, { _0633_, _0632_ });
  assign _0632_ = state == 5'h0c;
  assign _0633_ = state == 5'h0b;
  assign _0644_ = _0654_ ? _0630_ : 1'hx;
  function [1:0] _1449_;
    input [1:0] a;
    input [15:0] b;
    input [7:0] s;
    casez (s) // synopsys parallel_case
      8'b???????1:
        _1449_ = b[1:0];
      8'b??????1?:
        _1449_ = b[3:2];
      8'b?????1??:
        _1449_ = b[5:4];
      8'b????1???:
        _1449_ = b[7:6];
      8'b???1????:
        _1449_ = b[9:8];
      8'b??1?????:
        _1449_ = b[11:10];
      8'b?1??????:
        _1449_ = b[13:12];
      8'b1???????:
        _1449_ = b[15:14];
      default:
        _1449_ = a;
    endcase
  endfunction
  assign _0635_ = _1449_(2'h0, { _0141_, _0158_, _0170_, _0179_, _0187_, _0195_, _0203_, _0211_ }, { _0643_, _0642_, _0641_, _0640_, _0639_, _0638_, _0637_, _0636_ });
  assign _0636_ = state == 5'h0f;
  assign _0637_ = state == 5'h0e;
  assign _0638_ = state == 5'h0d;
  assign _0639_ = state == 5'h0b;
  assign _0640_ = state == 5'h0a;
  assign _0641_ = state == 5'h09;
  assign _0642_ = state == 5'h04;
  assign _0643_ = state == 5'h01;
  function [0:0] _1458_;
    input [0:0] a;
    input [17:0] b;
    input [17:0] s;
    casez (s) // synopsys parallel_case
      18'b?????????????????1:
        _1458_ = b[0:0];
      18'b????????????????1?:
        _1458_ = b[1:1];
      18'b???????????????1??:
        _1458_ = b[2:2];
      18'b??????????????1???:
        _1458_ = b[3:3];
      18'b?????????????1????:
        _1458_ = b[4:4];
      18'b????????????1?????:
        _1458_ = b[5:5];
      18'b???????????1??????:
        _1458_ = b[6:6];
      18'b??????????1???????:
        _1458_ = b[7:7];
      18'b?????????1????????:
        _1458_ = b[8:8];
      18'b????????1?????????:
        _1458_ = b[9:9];
      18'b???????1??????????:
        _1458_ = b[10:10];
      18'b??????1???????????:
        _1458_ = b[11:11];
      18'b?????1????????????:
        _1458_ = b[12:12];
      18'b????1?????????????:
        _1458_ = b[13:13];
      18'b???1??????????????:
        _1458_ = b[14:14];
      18'b??1???????????????:
        _1458_ = b[15:15];
      18'b?1????????????????:
        _1458_ = b[16:16];
      18'b1?????????????????:
        _1458_ = b[17:17];
      default:
        _1458_ = a;
    endcase
  endfunction
  assign _0645_ = _1458_(1'h1, { _0146_, _0163_, _0174_, _0183_, 1'h0, _0191_, _0199_, _0207_, _0215_, _0069_, _0076_, _0083_, _0087_, 4'h0, _0089_ }, { _0664_, _0663_, _0662_, _0661_, _0660_, _0659_, _0658_, _0657_, _0656_, _0655_, _0653_, _0652_, _0651_, _0650_, _0649_, _0648_, _0647_, _0646_ });
  assign _0646_ = state == 5'h14;
  assign _0647_ = state == 5'h13;
  assign _0648_ = state == 5'h12;
  assign _0649_ = state == 5'h11;
  assign _0650_ = state == 5'h10;
  assign _0651_ = state == 5'h0f;
  assign _0652_ = state == 5'h0e;
  assign _0653_ = state == 5'h0d;
  assign _0654_ = state == 5'h0e;
  assign _0655_ = state == 5'h0c;
  assign _0656_ = state == 5'h0b;
  assign _0657_ = state == 5'h0a;
  assign _0658_ = state == 5'h09;
  assign _0659_ = state == 5'h07;
  assign _0660_ = state == 5'h06;
  assign _0661_ = state == 5'h04;
  assign _0662_ = state == 5'h03;
  assign _0663_ = state == 5'h02;
  assign _0664_ = state == 5'h01;
  function [0:0] _1478_;
    input [0:0] a;
    input [11:0] b;
    input [11:0] s;
    casez (s) // synopsys parallel_case
      12'b???????????1:
        _1478_ = b[0:0];
      12'b??????????1?:
        _1478_ = b[1:1];
      12'b?????????1??:
        _1478_ = b[2:2];
      12'b????????1???:
        _1478_ = b[3:3];
      12'b???????1????:
        _1478_ = b[4:4];
      12'b??????1?????:
        _1478_ = b[5:5];
      12'b?????1??????:
        _1478_ = b[6:6];
      12'b????1???????:
        _1478_ = b[7:7];
      12'b???1????????:
        _1478_ = b[8:8];
      12'b??1?????????:
        _1478_ = b[9:9];
      12'b?1??????????:
        _1478_ = b[10:10];
      12'b1???????????:
        _1478_ = b[11:11];
      default:
        _1478_ = a;
    endcase
  endfunction
  assign _0665_ = _1478_(1'h1, { _0147_, _0164_, _0175_, _0184_, 1'h0, _0192_, _0200_, _0208_, _0216_, _0070_, _0077_, _0084_ }, { _0677_, _0676_, _0675_, _0674_, _0673_, _0672_, _0671_, _0670_, _0669_, _0668_, _0667_, _0666_ });
  assign _0666_ = state == 5'h0f;
  assign _0667_ = state == 5'h0e;
  assign _0668_ = state == 5'h0d;
  assign _0669_ = state == 5'h0b;
  assign _0670_ = state == 5'h0a;
  assign _0671_ = state == 5'h09;
  assign _0672_ = state == 5'h07;
  assign _0673_ = state == 5'h06;
  assign _0674_ = state == 5'h04;
  assign _0675_ = state == 5'h03;
  assign _0676_ = state == 5'h02;
  assign _0677_ = state == 5'h01;
  function [0:0] _1491_;
    input [0:0] a;
    input [10:0] b;
    input [10:0] s;
    casez (s) // synopsys parallel_case
      11'b??????????1:
        _1491_ = b[0:0];
      11'b?????????1?:
        _1491_ = b[1:1];
      11'b????????1??:
        _1491_ = b[2:2];
      11'b???????1???:
        _1491_ = b[3:3];
      11'b??????1????:
        _1491_ = b[4:4];
      11'b?????1?????:
        _1491_ = b[5:5];
      11'b????1??????:
        _1491_ = b[6:6];
      11'b???1???????:
        _1491_ = b[7:7];
      11'b??1????????:
        _1491_ = b[8:8];
      11'b?1?????????:
        _1491_ = b[9:9];
      11'b1??????????:
        _1491_ = b[10:10];
      default:
        _1491_ = a;
    endcase
  endfunction
  assign _0678_ = _1491_(1'h1, { _0142_, _0159_, _0171_, _0180_, _0188_, _0196_, _0204_, _0212_, _0066_, _0073_, _0080_ }, { _0689_, _0688_, _0687_, _0686_, _0685_, _0684_, _0683_, _0682_, _0681_, _0680_, _0679_ });
  assign _0679_ = state == 5'h0f;
  assign _0680_ = state == 5'h0e;
  assign _0681_ = state == 5'h0d;
  assign _0682_ = state == 5'h0b;
  assign _0683_ = state == 5'h0a;
  assign _0684_ = state == 5'h09;
  assign _0685_ = state == 5'h07;
  assign _0686_ = state == 5'h04;
  assign _0687_ = state == 5'h03;
  assign _0688_ = state == 5'h02;
  assign _0689_ = state == 5'h01;
  function [0:0] _1503_;
    input [0:0] a;
    input [11:0] b;
    input [11:0] s;
    casez (s) // synopsys parallel_case
      12'b???????????1:
        _1503_ = b[0:0];
      12'b??????????1?:
        _1503_ = b[1:1];
      12'b?????????1??:
        _1503_ = b[2:2];
      12'b????????1???:
        _1503_ = b[3:3];
      12'b???????1????:
        _1503_ = b[4:4];
      12'b??????1?????:
        _1503_ = b[5:5];
      12'b?????1??????:
        _1503_ = b[6:6];
      12'b????1???????:
        _1503_ = b[7:7];
      12'b???1????????:
        _1503_ = b[8:8];
      12'b??1?????????:
        _1503_ = b[9:9];
      12'b?1??????????:
        _1503_ = b[10:10];
      12'b1???????????:
        _1503_ = b[11:11];
      default:
        _1503_ = a;
    endcase
  endfunction
  assign _0690_ = _1503_(1'h1, { _0148_, _0165_, _0176_, _0185_, 1'h0, _0193_, _0201_, _0209_, _0217_, _0071_, _0078_, _0085_ }, { _0702_, _0701_, _0700_, _0699_, _0698_, _0697_, _0696_, _0695_, _0694_, _0693_, _0692_, _0691_ });
  assign _0691_ = state == 5'h0f;
  assign _0692_ = state == 5'h0e;
  assign _0693_ = state == 5'h0d;
  assign _0694_ = state == 5'h0b;
  assign _0695_ = state == 5'h0a;
  assign _0696_ = state == 5'h09;
  assign _0697_ = state == 5'h07;
  assign _0698_ = state == 5'h06;
  assign _0699_ = state == 5'h04;
  assign _0700_ = state == 5'h03;
  assign _0701_ = state == 5'h02;
  assign _0702_ = state == 5'h01;
  function [0:0] _1516_;
    input [0:0] a;
    input [10:0] b;
    input [10:0] s;
    casez (s) // synopsys parallel_case
      11'b??????????1:
        _1516_ = b[0:0];
      11'b?????????1?:
        _1516_ = b[1:1];
      11'b????????1??:
        _1516_ = b[2:2];
      11'b???????1???:
        _1516_ = b[3:3];
      11'b??????1????:
        _1516_ = b[4:4];
      11'b?????1?????:
        _1516_ = b[5:5];
      11'b????1??????:
        _1516_ = b[6:6];
      11'b???1???????:
        _1516_ = b[7:7];
      11'b??1????????:
        _1516_ = b[8:8];
      11'b?1?????????:
        _1516_ = b[9:9];
      11'b1??????????:
        _1516_ = b[10:10];
      default:
        _1516_ = a;
    endcase
  endfunction
  assign _0703_ = _1516_(1'h0, { _0144_, _0161_, _0173_, _0182_, _0190_, _0198_, _0206_, _0214_, _0068_, _0075_, _0082_ }, { _0714_, _0713_, _0712_, _0711_, _0710_, _0709_, _0708_, _0707_, _0706_, _0705_, _0704_ });
  assign _0704_ = state == 5'h0f;
  assign _0705_ = state == 5'h0e;
  assign _0706_ = state == 5'h0d;
  assign _0707_ = state == 5'h0b;
  assign _0708_ = state == 5'h0a;
  assign _0709_ = state == 5'h09;
  assign _0710_ = state == 5'h07;
  assign _0715_ = _0726_ ? 1'h1 : 1'h0;
  assign _0711_ = state == 5'h04;
  assign _0712_ = state == 5'h03;
  assign _0713_ = state == 5'h02;
  assign _0714_ = state == 5'h01;
  function [0:0] _1529_;
    input [0:0] a;
    input [11:0] b;
    input [11:0] s;
    casez (s) // synopsys parallel_case
      12'b???????????1:
        _1529_ = b[0:0];
      12'b??????????1?:
        _1529_ = b[1:1];
      12'b?????????1??:
        _1529_ = b[2:2];
      12'b????????1???:
        _1529_ = b[3:3];
      12'b???????1????:
        _1529_ = b[4:4];
      12'b??????1?????:
        _1529_ = b[5:5];
      12'b?????1??????:
        _1529_ = b[6:6];
      12'b????1???????:
        _1529_ = b[7:7];
      12'b???1????????:
        _1529_ = b[8:8];
      12'b??1?????????:
        _1529_ = b[9:9];
      12'b?1??????????:
        _1529_ = b[10:10];
      12'b1???????????:
        _1529_ = b[11:11];
      default:
        _1529_ = a;
    endcase
  endfunction
  assign _0716_ = _1529_(1'h1, { _0143_, _0160_, _0172_, _0181_, 1'h0, _0189_, _0197_, _0205_, _0213_, _0067_, _0074_, _0081_ }, { _0729_, _0728_, _0727_, _0725_, _0724_, _0723_, _0722_, _0721_, _0720_, _0719_, _0718_, _0717_ });
  assign _0717_ = state == 5'h0f;
  assign _0718_ = state == 5'h0e;
  assign _0719_ = state == 5'h0d;
  assign _0720_ = state == 5'h0b;
  assign _0721_ = state == 5'h0a;
  assign _0722_ = state == 5'h09;
  assign _0723_ = state == 5'h07;
  assign _0724_ = state == 5'h06;
  assign _0725_ = state == 5'h04;
  assign _0735_ = _0744_ ? _0715_ : 1'hx;
  assign _0727_ = state == 5'h03;
  assign _0728_ = state == 5'h02;
  assign _0729_ = state == 5'h01;
  function [3:0] _1543_;
    input [3:0] a;
    input [7:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1543_ = b[3:0];
      2'b1?:
        _1543_ = b[7:4];
      default:
        _1543_ = a;
    endcase
  endfunction
  assign _0730_ = _1543_(4'h0, { 4'hc, _0130_ }, { _0732_, _0731_ });
  assign _0731_ = state == 5'h14;
  assign _0732_ = state == 5'h13;
  assign _0733_ = _0734_ ? _0131_ : 1'h0;
  assign _0734_ = state == 5'h14;
  assign _0736_ = _0737_ ? 5'h00 : next_state;
  assign _0738_ = _0739_ ? 1'h1 : 1'h0;
  assign _0740_ = _0741_ ? 1'h0 : _0738_;
  assign _0742_ = _0743_ ? 1'h1 : command_refill_pending;
  assign _0744_ = state == 5'h0e;
  assign _0745_ = _0746_ ? 1'h0 : _0742_;
  assign _0747_ = _0748_ ? 1'h1 : command_evict_pending;
  assign _0749_ = _0750_ ? 1'h0 : _0747_;
  assign _0751_ = _0752_ ? 1'h1 : 1'h0;
  assign _0753_ = _0754_ ? 1'h1 : 1'h0;
  assign _0755_ = _0756_ ? 1'h1 : 1'h0;
  assign _0757_ = _0758_ ? 1'h1 : 1'h0;
  assign _0759_ = _0760_ ? 1'h1 : 1'h0;
  assign _0761_ = _0762_ ? 1'h0 : _0759_;
  assign _0763_ = _0764_ ? 1'h1 : 1'h0;
  assign _0765_ = _0766_ ? refill_adr[9:0] : cache_adr_msb;
  assign _0767_ = _0768_ ? evict_adr[9:0] : _0765_;
  assign _0769_ = burst_counter[3] ? burst_counter : _0218_;
  assign _0771_ = _0772_ ? 4'h0 : _0769_;
  assign _0773_ = _0774_ ? evict_adr[1:0] : track_bank;
  assign _0775_ = _0776_ ? refill_adr[1:0] : _0773_;
  assign _0777_ = _0778_ ? evict_adr[20:8] : track_row;
  assign _0779_ = _0780_ ? refill_adr[20:8] : _0777_;
  assign _0781_ = _0782_ ? track_row : openrow3;
  assign _0782_ = track_bank == 2'h3;
  assign _0783_ = _0784_ ? _0781_ : openrow3;
  assign _0787_ = _0788_ ? openrow3 : _0785_;
  assign _0789_ = _0790_ ? 1'h1 : active3;
  assign _0790_ = track_bank == 2'h3;
  assign _0791_ = _0792_ ? _0789_ : active3;
  assign _0793_ = _0794_ ? 1'h0 : active3;
  assign _0794_ = track_bank == 2'h3;
  assign _0797_ = _0798_ ? 1'h0 : _0795_;
  assign _0799_ = _0800_ ? track_row : openrow2;
  assign _0800_ = track_bank == 2'h2;
  assign _0801_ = _0802_ ? _0799_ : openrow2;
  assign _0805_ = _0806_ ? openrow2 : _0803_;
  assign _0807_ = _0808_ ? 1'h1 : active2;
  assign _0808_ = track_bank == 2'h2;
  assign _0809_ = _0810_ ? _0807_ : active2;
  assign _0817_ = _0824_ ? 1'h1 : 1'h0;
  assign _0811_ = _0812_ ? 1'h0 : active2;
  assign _0812_ = track_bank == 2'h2;
  assign _0815_ = _0816_ ? 1'h0 : _0813_;
  assign _0818_ = _0819_ ? track_row : openrow1;
  assign _0819_ = track_bank == 2'h1;
  assign _0820_ = _0821_ ? _0818_ : openrow1;
  assign _0831_ = _0838_ ? _0817_ : 1'hx;
  assign _0825_ = _0826_ ? openrow1 : _0822_;
  assign _0827_ = _0828_ ? 1'h1 : active1;
  assign _0828_ = track_bank == 2'h1;
  assign _0829_ = _0830_ ? _0827_ : active1;
  assign _0832_ = _0833_ ? 1'h0 : active1;
  assign _0833_ = track_bank == 2'h1;
  assign _0836_ = _0837_ ? 1'h0 : _0834_;
  assign _0838_ = state == 5'h0e;
  assign _0839_ = _0840_ ? track_row : openrow0;
  assign _0840_ = ! track_bank;
  assign _0841_ = _0842_ ? _0839_ : openrow0;
  assign _0845_ = _0846_ ? openrow0 : _0843_;
  assign _0847_ = _0848_ ? 1'h1 : active0;
  assign _0848_ = ! track_bank;
  assign _0849_ = _0850_ ? _0847_ : active0;
  assign _0851_ = _0852_ ? 1'h0 : active0;
  assign _0852_ = ! track_bank;
  assign _0855_ = _0856_ ? 1'h0 : _0853_;
  assign _0857_ = _0247_ ? refresh_counter : _1056_;
  assign _0859_ = _0860_ ? 12'h2e4 : _0857_;
  assign _0861_ = _0246_ ? activate_counter : _1055_;
  assign _0863_ = _0864_ ? 3'h2 : _0861_;
  assign _0865_ = _0245_ ? autorefresh_counter : _1054_;
  assign _0867_ = _0868_ ? 4'h9 : _0865_;
  assign _0869_ = _0244_ ? precharge_counter : _1053_;
  assign _0871_ = _0872_ ? 3'h4 : _0869_;
  assign _0873_ = _0243_ ? prechargeall_counter : _1052_;
  assign _0875_ = _0876_ ? 3'h4 : _0873_;
  assign _0877_ = _0242_ ? init_counter : _1051_;
  assign _0879_ = _0880_ ? 14'h30d4 : _0877_;
  assign _0881_ = _0882_ ? _1057_ : 16'hzzzz;
  assign _0883_ = _0884_ ? refill_adr[1:0] : 2'h0;
  assign _0885_ = _0886_ ? _0883_ : 2'hx;
  assign _0886_ = state == 5'h0e;
  assign _0887_ = _0888_ ? 1'h0 : 1'h1;
  assign _0889_ = _0890_ ? _0887_ : 1'hx;
  assign _0890_ = state == 5'h0e;
  assign _0891_ = _0892_ ? 1'h1 : 1'hx;
  assign _0892_ = state == 5'h0e;
  assign _0893_ = _0894_ ? 1'h1 : 1'hx;
  assign _0894_ = state == 5'h0e;
  assign _0895_ = _0896_ ? 1'h0 : 1'h1;
  assign _0897_ = _0898_ ? _0895_ : 1'hx;
  assign _0898_ = state == 5'h0e;
  assign _0899_ = _0900_ ? 1'h0 : 1'hx;
  assign _0900_ = state == 5'h0e;
  assign _0901_ = _0902_ ? 1'h1 : 1'hx;
  assign _0902_ = state == 5'h0e;
  assign _0903_ = _0904_ ? 5'h0e : 5'h0f;
  assign _0905_ = _0906_ ? _0903_ : 5'hxx;
  assign _0906_ = state == 5'h0d;
  assign _0907_ = _0908_ ? 1'h1 : 1'h0;
  assign _0909_ = _0910_ ? _0907_ : 1'hx;
  assign _0910_ = state == 5'h0d;
  assign _0911_ = _0912_ ? refill_adr[1:0] : 2'h0;
  assign _0913_ = _0914_ ? _0911_ : 2'hx;
  assign _0914_ = state == 5'h0d;
  assign _0915_ = _0916_ ? 1'h0 : 1'h1;
  assign _0917_ = _0918_ ? _0915_ : 1'hx;
  assign _0918_ = state == 5'h0d;
  assign _0919_ = _0920_ ? 1'h0 : 1'h1;
  assign _0921_ = _0922_ ? _0919_ : 1'hx;
  assign _0922_ = state == 5'h0d;
  assign _0923_ = _0924_ ? 1'h1 : 1'hx;
  assign _0924_ = state == 5'h0d;
  assign _0925_ = _0926_ ? 1'h0 : 1'h1;
  assign _0927_ = _0928_ ? _0925_ : 1'hx;
  assign _0928_ = state == 5'h0d;
  assign _0929_ = _0930_ ? 1'h0 : 1'hx;
  assign _0930_ = state == 5'h0d;
  assign _0931_ = _0932_ ? 1'h1 : 1'hx;
  assign _0932_ = state == 5'h0d;
  assign _0933_ = _0934_ ? 5'h0d : state;
  assign _0935_ = _0936_ ? _0933_ : 5'hxx;
  assign _0936_ = state == 5'h0c;
  assign _0937_ = _0938_ ? 1'h1 : 1'h0;
  assign _0939_ = _0940_ ? _0937_ : 1'hx;
  assign _0940_ = state == 5'h0c;
  assign _0941_ = _0942_ ? 1'h0 : 1'h1;
  assign _0943_ = _0944_ ? _0941_ : 1'hx;
  assign _0944_ = state == 5'h0c;
  assign _0945_ = _0946_ ? 1'h1 : 1'h0;
  assign _0947_ = _0948_ ? _0945_ : 1'hx;
  assign _0948_ = state == 5'h0c;
  assign _0949_ = _0950_ ? 5'h0c : state;
  assign _0951_ = _0952_ ? _0949_ : 5'hxx;
  assign _0952_ = state == 5'h0b;
  assign _0953_ = _0954_ ? 1'h0 : 1'h1;
  assign _0955_ = _0956_ ? _0953_ : 1'hx;
  assign _0956_ = state == 5'h0b;
  assign _0957_ = _0958_ ? 1'h1 : 1'h0;
  assign _0959_ = _0960_ ? _0957_ : 1'hx;
  assign _0960_ = state == 5'h0b;
  assign _0961_ = _0962_ ? 1'h1 : 1'h0;
  assign _0963_ = _0964_ ? _0961_ : 1'hx;
  assign _0964_ = state == 5'h0b;
  assign _0965_ = _0966_ ? evict_adr[1:0] : 2'h0;
  assign _0967_ = _0968_ ? _0965_ : 2'hx;
  assign _0968_ = state == 5'h0b;
  assign _0969_ = _0970_ ? 1'h0 : 1'h1;
  assign _0971_ = _0972_ ? _0969_ : 1'hx;
  assign _0972_ = state == 5'h0b;
  assign _0973_ = _0974_ ? 1'h0 : 1'h1;
  assign _0975_ = _0976_ ? _0973_ : 1'hx;
  assign _0976_ = state == 5'h0b;
  assign _0977_ = _0978_ ? 1'h0 : 1'h1;
  assign _0979_ = _0980_ ? _0977_ : 1'hx;
  assign _0980_ = state == 5'h0b;
  assign _0981_ = _0982_ ? 1'h1 : 1'hx;
  assign _0982_ = state == 5'h0b;
  assign _0983_ = _0984_ ? 1'h0 : 1'hx;
  assign _0984_ = state == 5'h0b;
  assign _0985_ = _0986_ ? 1'h1 : 1'hx;
  assign _0986_ = state == 5'h0b;
  assign _0987_ = _0988_ ? 5'h0b : state;
  assign _0989_ = _0990_ ? _0987_ : 5'hxx;
  assign _0990_ = state == 5'h0a;
  assign _0991_ = _0992_ ? 1'h1 : 1'h0;
  assign _0993_ = _0994_ ? _0991_ : 1'hx;
  assign _0994_ = state == 5'h0a;
  assign _0995_ = _0996_ ? 1'h1 : 1'h0;
  assign _0997_ = _0998_ ? _0995_ : 1'hx;
  assign _0998_ = state == 5'h0a;
  assign _0999_ = _1000_ ? 1'h1 : 1'h0;
  assign _1001_ = _1002_ ? _0999_ : 1'hx;
  assign _1002_ = state == 5'h0a;
  assign _1003_ = _1004_ ? evict_adr[1:0] : 2'h0;
  assign _1005_ = _1006_ ? _1003_ : 2'hx;
  assign _1006_ = state == 5'h0a;
  assign _1007_ = _1008_ ? 1'h0 : 1'h1;
  assign _1009_ = _1010_ ? _1007_ : 1'hx;
  assign _1010_ = state == 5'h0a;
  assign _1011_ = _1012_ ? 1'h1 : 1'hx;
  assign _1012_ = state == 5'h0a;
  assign _1013_ = _1014_ ? 1'h1 : 1'hx;
  assign _1014_ = state == 5'h0a;
  assign _1015_ = _1016_ ? 1'h0 : 1'h1;
  assign _1017_ = _1018_ ? _1015_ : 1'hx;
  assign _1018_ = state == 5'h0a;
  assign _1019_ = _1020_ ? 1'h0 : 1'hx;
  assign _1020_ = state == 5'h0a;
  assign _1021_ = _1022_ ? 1'h1 : 1'hx;
  assign _1022_ = state == 5'h0a;
  assign _1023_ = _1024_ ? 5'h0a : 5'h0b;
  assign _1025_ = _1026_ ? _1023_ : 5'hxx;
  assign _1026_ = state == 5'h09;
  assign _1027_ = _1028_ ? 1'h1 : 1'h0;
  assign _1029_ = _1030_ ? _1027_ : 1'hx;
  assign _1030_ = state == 5'h09;
  assign _1031_ = _1032_ ? evict_adr[1:0] : 2'h0;
  assign _1033_ = _1034_ ? _1031_ : 2'hx;
  assign _1034_ = state == 5'h09;
  assign _1035_ = _1036_ ? 1'h0 : 1'h1;
  assign _1037_ = _1038_ ? _1035_ : 1'hx;
  assign _1038_ = state == 5'h09;
  assign _1039_ = _1040_ ? 1'h0 : 1'h1;
  assign _1041_ = _1042_ ? _1039_ : 1'hx;
  assign _1042_ = state == 5'h09;
  assign _1043_ = _1044_ ? 1'h1 : 1'hx;
  assign _1044_ = state == 5'h09;
  assign _1045_ = _1046_ ? 1'h0 : 1'h1;
  assign _1047_ = _1048_ ? _1045_ : 1'hx;
  assign _1048_ = state == 5'h09;
  assign _1049_ = _1050_ ? 1'h0 : 1'hx;
  assign _1050_ = state == 5'h09;
  assign _1051_ = init_counter - 4'h1;
  assign _1052_ = prechargeall_counter - 3'h1;
  assign _1053_ = precharge_counter - 3'h1;
  assign _1054_ = autorefresh_counter - 4'h1;
  assign _1055_ = activate_counter - 3'h1;
  assign _1056_ = refresh_counter - 12'h001;
  assign _1057_ = burst_counter[0] ? cache_dat_i[15:0] : cache_dat_i[31:16];
  always @(posedge sdram_clk) begin
    if (_0235_) begin
      $write("Reads from the cache begin at address %03h\n", $unsigned(evict_adr[9:0]));
    end
    if (_0237_) begin
      $write("EVICT  addr %021b\n", $unsigned(evict_adr));
    end
    if (_0241_) begin
      $write("state:%2d->%2d\n", $unsigned(state), $unsigned(next_state));
    end
    if (_0236_) begin
      $write("Writes to the cache begin at address %03h\n", $unsigned(refill_adr[9:0]));
    end
    if (_0238_) begin
      $write("REFILL addr %021b\n", $unsigned(refill_adr));
    end
    if (_0239_) begin
      $write("REFILL addr %021b\n", $unsigned(refill_adr));
    end
    if (_0240_) begin
      $write("ACK    addr %021b\n", $unsigned(refill_adr));
    end
  end
  assign evict_row = evict_adr[20:8];
  assign evict_column = { evict_adr[7:2], 3'h0 };
  assign evict_bank = evict_adr[1:0];
  assign refill_row = refill_adr[20:8];
  assign refill_column = { refill_adr[7:2], 3'h0 };
  assign refill_bank = refill_adr[1:0];
  assign sdram_dq = dq;
  assign init_done = _0242_;
  assign prechargeall_done = _0243_;
  assign precharge_done = _0244_;
  assign autorefresh_done = _0245_;
  assign activate_done = _0246_;
  assign needs_refresh = _0247_;
  assign evict_needs_rowswitch = _0290_;
  assign refill_needs_rowswitch = _0297_;
  assign burst_finished = burst_counter[3];
  assign burst_last = _0234_;
  assign cache_adr = { cache_adr_msb, next_burst_counter[2:1] };
  assign cache_dat_o = { sdram_dq_in, sdram_dq_in };
  assign sdram_dq_out = _1057_;
  assign _0026_ = _0106_;
  assign _0022_ = _0103_;
  assign _0021_ = _0102_;
  assign _0037_ = _0109_;
  assign _0024_ = _0105_;
  assign _0023_ = _0104_;
  assign _0062_ = _0122_;
  assign _0063_ = _0123_;
  assign _0041_ = _0113_;
  assign _0035_ = _0107_;
  assign _0036_ = _0108_;
  assign _0039_ = _0111_;
  assign _0040_ = _0112_;
  assign _0038_ = _0110_;
  assign _0005_ = _0094_;
  assign _0009_ = _0098_;
  assign _0010_ = _0099_;
  assign _0006_ = _0095_;
  assign _0007_ = _0096_;
  assign _0008_ = _0097_;
  assign _0051_ = _0118_;
  assign _0044_ = _0114_;
  assign _0054_ = _0119_;
  assign _0056_ = _0120_;
  assign _0046_ = _0115_;
  assign _0058_ = _0121_;
  assign _0050_ = _0117_;
  assign _0048_ = _0116_;
  assign _0014_ = _0100_;
  assign _0015_ = _0101_;
  assign _0061_ = 1'h0;
  assign _0012_ = next_burst_counter;
  assign _0033_ = _0297_;
  assign _0019_ = _0290_;
  assign _0042_ = _0284_;
  assign _0052_ = dq;
  assign _0043_ = sdram_ba_r;
  assign _0053_ = { sdram_dqm_r, sdram_dqm_r };
  assign _0055_ = sdram_ras_n_r;
  assign _0045_ = sdram_cas_n_r;
  assign _0057_ = sdram_we_n_r;
  assign _0049_ = sdram_cs_n_r;
  assign _0047_ = sdram_cke_r;
  assign _0337_ = burst_last;
  assign _0093_ = _0340_;
  assign _0353_ = burst_last;
  assign _0131_ = _0358_;
  assign _0375_ = burst_last;
  assign _0089_ = _0378_;
  assign _0391_ = burst_last;
  assign _0130_ = _0396_;
  assign _0415_ = activate_done;
  assign _0092_ = _0418_;
  assign _0437_ = activate_done;
  assign _0128_ = _0440_;
  assign _0457_ = activate_done;
  assign _0211_ = _0460_;
  assign _0475_ = activate_done;
  assign _0087_ = _0479_;
  assign _0085_ = _0496_;
  assign _0511_ = activate_done;
  assign _0080_ = _0512_;
  assign _0084_ = _0528_;
  assign _0082_ = _0544_;
  assign _0081_ = _0579_;
  assign _0608_ = precharge_done;
  assign _0091_ = _0612_;
  assign _0634_ = precharge_done;
  assign _0154_ = _0644_;
  assign _0726_ = precharge_done;
  assign _0166_ = _0735_;
  assign _0824_ = precharge_done;
  assign _0129_ = _0831_;
  assign _0884_ = precharge_done;
  assign _0203_ = _0885_;
  assign _0888_ = precharge_done;
  assign _0083_ = _0889_;
  assign _0078_ = _0891_;
  assign _0073_ = _0893_;
  assign _0896_ = precharge_done;
  assign _0077_ = _0897_;
  assign _0075_ = _0899_;
  assign _0074_ = _0901_;
  assign _0904_ = refill_needs_rowswitch_r;
  assign _0090_ = _0905_;
  assign _0908_ = refill_needs_rowswitch_r;
  assign _0156_ = _0909_;
  assign _0912_ = refill_needs_rowswitch_r;
  assign _0195_ = _0913_;
  assign _0916_ = refill_needs_rowswitch_r;
  assign _0076_ = _0917_;
  assign _0920_ = refill_needs_rowswitch_r;
  assign _0071_ = _0921_;
  assign _0066_ = _0923_;
  assign _0926_ = refill_needs_rowswitch_r;
  assign _0070_ = _0927_;
  assign _0068_ = _0929_;
  assign _0067_ = _0931_;
  assign _0934_ = burst_finished;
  assign _0088_ = _0935_;
  assign _0938_ = burst_finished;
  assign _0177_ = _0939_;
  assign _0942_ = burst_finished;
  assign _0162_ = _0943_;
  assign _0946_ = burst_finished;
  assign _0069_ = _0947_;
  assign _0950_ = activate_done;
  assign _0086_ = _0951_;
  assign _0954_ = activate_done;
  assign _0137_ = _0955_;
  assign _0958_ = activate_done;
  assign _0145_ = _0959_;
  assign _0962_ = activate_done;
  assign _0125_ = _0963_;
  assign _0966_ = activate_done;
  assign _0187_ = _0967_;
  assign _0970_ = activate_done;
  assign _0215_ = _0971_;
  assign _0974_ = activate_done;
  assign _0217_ = _0975_;
  assign _0978_ = activate_done;
  assign _0212_ = _0979_;
  assign _0216_ = _0981_;
  assign _0214_ = _0983_;
  assign _0213_ = _0985_;
  assign _0988_ = precharge_done;
  assign _0079_ = _0989_;
  assign _0992_ = precharge_done;
  assign _0135_ = _0993_;
  assign _0996_ = precharge_done;
  assign _0150_ = _0997_;
  assign _1000_ = precharge_done;
  assign _0126_ = _1001_;
  assign _1004_ = precharge_done;
  assign _0179_ = _1005_;
  assign _1008_ = precharge_done;
  assign _0207_ = _1009_;
  assign _0209_ = _1011_;
  assign _0204_ = _1013_;
  assign _1016_ = precharge_done;
  assign _0208_ = _1017_;
  assign _0206_ = _1019_;
  assign _0205_ = _1021_;
  assign _1024_ = evict_needs_rowswitch_r;
  assign _0072_ = _1025_;
  assign _1028_ = evict_needs_rowswitch_r;
  assign _0138_ = _1029_;
  assign _1032_ = evict_needs_rowswitch_r;
  assign _0170_ = _1033_;
  assign _1036_ = evict_needs_rowswitch_r;
  assign _0199_ = _1037_;
  assign _1040_ = evict_needs_rowswitch_r;
  assign _0201_ = _1041_;
  assign _0196_ = _1043_;
  assign _1046_ = evict_needs_rowswitch_r;
  assign _0200_ = _1047_;
  assign _0198_ = _1049_;
  assign _0197_ = _0304_;
  assign _0307_ = autorefresh_done;
  assign _0065_ = _0308_;
  assign _0311_ = autorefresh_done;
  assign _0157_ = _0312_;
  assign _0315_ = prechargeall_done;
  assign _0210_ = _0316_;
  assign _0319_ = prechargeall_done;
  assign _0169_ = _0320_;
  assign _0323_ = prechargeall_done;
  assign _0191_ = _0324_;
  assign _0193_ = _0326_;
  assign _0329_ = prechargeall_done;
  assign _0188_ = _0330_;
  assign _0333_ = prechargeall_done;
  assign _0192_ = _0334_;
  assign _0190_ = _0338_;
  assign _0189_ = _0341_;
  assign _0345_ = _0303_;
  assign _0347_ = _0302_;
  assign _0349_ = needs_refresh;
  assign _0202_ = _0350_;
  assign _0355_ = _0303_;
  assign _0357_ = _0302_;
  assign _0360_ = needs_refresh;
  assign _0167_ = _0361_;
  assign _0365_ = _0302_;
  assign _0367_ = needs_refresh;
  assign _0194_ = _0368_;
  assign _0372_ = _0302_;
  assign _0374_ = needs_refresh;
  assign _0151_ = _0376_;
  assign _0381_ = _0302_;
  assign _0383_ = needs_refresh;
  assign _0152_ = _0384_;
  assign _0387_ = needs_refresh;
  assign _0186_ = _0388_;
  assign _0393_ = needs_refresh;
  assign _0133_ = _0394_;
  assign _0399_ = needs_refresh;
  assign _0132_ = _0400_;
  assign _0403_ = autorefresh_done;
  assign _0178_ = _0404_;
  assign _0407_ = autorefresh_done;
  assign _0140_ = _0408_;
  assign _0411_ = autorefresh_done;
  assign _0127_ = _0412_;
  assign _0158_ = _0416_;
  assign _0421_ = autorefresh_done;
  assign _0183_ = _0422_;
  assign _0425_ = autorefresh_done;
  assign _0185_ = _0426_;
  assign _0429_ = autorefresh_done;
  assign _0180_ = _0430_;
  assign _0433_ = autorefresh_done;
  assign _0184_ = _0434_;
  assign _0182_ = _0438_;
  assign _0181_ = _0442_;
  assign _0445_ = autorefresh_done;
  assign _0168_ = _0446_;
  assign _0449_ = autorefresh_done;
  assign _0155_ = _0450_;
  assign _0453_ = autorefresh_done;
  assign _0174_ = _0454_;
  assign _0176_ = _0458_;
  assign _0463_ = autorefresh_done;
  assign _0171_ = _0464_;
  assign _0467_ = autorefresh_done;
  assign _0175_ = _0468_;
  assign _0173_ = _0470_;
  assign _0172_ = _0472_;
  assign _0477_ = prechargeall_done;
  assign _0153_ = _0478_;
  assign _0483_ = prechargeall_done;
  assign _0136_ = _0484_;
  assign _0487_ = prechargeall_done;
  assign _0163_ = _0488_;
  assign _0165_ = _0490_;
  assign _0493_ = prechargeall_done;
  assign _0159_ = _0494_;
  assign _0499_ = prechargeall_done;
  assign _0164_ = _0500_;
  assign _0161_ = _0502_;
  assign _0160_ = _0504_;
  assign _0507_ = init_done;
  assign _0134_ = _0508_;
  assign _0514_ = init_done;
  assign _0139_ = _0515_;
  assign _0519_ = init_done;
  assign _0149_ = _0520_;
  assign _0523_ = init_done;
  assign _0124_ = _0524_;
  assign _0141_ = _0526_;
  assign _0530_ = init_done;
  assign _0146_ = _0531_;
  assign _0535_ = init_done;
  assign _0148_ = _0536_;
  assign _0142_ = _0538_;
  assign _0541_ = init_done;
  assign _0147_ = _0542_;
  assign _0144_ = _0545_;
  assign _0549_ = init_done;
  assign _0143_ = _0550_;
  assign _0106_ = _0552_;
  assign _0110_ = _0574_;
  assign _0103_ = _0576_;
  assign _0102_ = _0580_;
  assign _0109_ = _0582_;
  assign _0105_ = _0587_;
  assign _0104_ = _0589_;
  assign _0122_ = _0591_;
  assign _0123_ = _0594_;
  assign _0113_ = _0597_;
  assign _0107_ = _0600_;
  assign _0108_ = _0604_;
  assign _0111_ = _0609_;
  assign _0112_ = _0614_;
  assign _0094_ = _0617_;
  assign _0098_ = _0620_;
  assign _0099_ = _0622_;
  assign _0095_ = _0624_;
  assign _0096_ = _0626_;
  assign _0097_ = _0628_;
  assign _0118_ = _0631_;
  assign _0114_ = _0635_;
  assign _0119_ = _0645_;
  assign _0120_ = _0665_;
  assign _0115_ = _0678_;
  assign _0121_ = _0690_;
  assign _0117_ = _0703_;
  assign _0116_ = _0716_;
  assign _0100_ = _0730_;
  assign _0101_ = _0733_;
  assign _0737_ = sdram_rst;
  assign _0059_ = _0736_;
  assign _0739_ = _0264_;
  assign _0741_ = sdram_rst;
  assign _0241_ = _0740_;
  assign _0743_ = command_refill;
  assign _0746_ = _0301_;
  assign _0017_ = _0745_;
  assign _0748_ = command_evict;
  assign _0750_ = _0301_;
  assign _0016_ = _0749_;
  assign _0752_ = command_ack;
  assign _0240_ = _0751_;
  assign _0754_ = command_refill;
  assign _0239_ = _0753_;
  assign _0756_ = command_evict;
  assign _0238_ = _0755_;
  assign _0758_ = command_evict;
  assign _0237_ = _0757_;
  assign _0760_ = load_cache_msb_refill;
  assign _0762_ = load_cache_msb_evict;
  assign _0236_ = _0761_;
  assign _0764_ = load_cache_msb_evict;
  assign _0235_ = _0763_;
  assign _0766_ = load_cache_msb_refill;
  assign _0768_ = load_cache_msb_evict;
  assign _0013_ = _0767_;
  assign _0770_ = _0279_;
  assign _0772_ = reload_burst_counter;
  assign _0025_ = _0771_;
  assign _0774_ = load_track_with_evict;
  assign _0776_ = load_track_with_refill;
  assign _0060_ = _0775_;
  assign _0778_ = load_track_with_evict;
  assign _0780_ = load_track_with_refill;
  assign _0064_ = _0779_;
  assign _0784_ = track_open;
  assign _0786_ = track_close;
  assign _0788_ = track_closeall;
  assign _0030_ = _0787_;
  assign _0792_ = track_open;
  assign _0796_ = track_close;
  assign _0798_ = track_closeall;
  assign _0004_ = _0797_;
  assign _0802_ = track_open;
  assign _0804_ = track_close;
  assign _0806_ = track_closeall;
  assign _0029_ = _0805_;
  assign _0810_ = track_open;
  assign _0814_ = track_close;
  assign _0816_ = track_closeall;
  assign _0003_ = _0815_;
  assign _0821_ = track_open;
  assign _0823_ = track_close;
  assign _0826_ = track_closeall;
  assign _0028_ = _0825_;
  assign _0830_ = track_open;
  assign _0835_ = track_close;
  assign _0837_ = track_closeall;
  assign _0002_ = _0836_;
  assign _0842_ = track_open;
  assign _0844_ = track_close;
  assign _0846_ = track_closeall;
  assign _0027_ = _0845_;
  assign _0850_ = track_open;
  assign _0854_ = track_close;
  assign _0856_ = track_closeall;
  assign _0001_ = _0855_;
  assign _0858_ = _0270_;
  assign _0860_ = reload_refresh_counter;
  assign _0034_ = _0859_;
  assign _0862_ = _0269_;
  assign _0864_ = reload_activate_counter;
  assign _0000_ = _0863_;
  assign _0866_ = _0268_;
  assign _0868_ = reload_autorefresh_counter;
  assign _0011_ = _0867_;
  assign _0870_ = _0267_;
  assign _0872_ = reload_precharge_counter;
  assign _0031_ = _0871_;
  assign _0874_ = _0266_;
  assign _0876_ = reload_prechargeall_counter;
  assign _0032_ = _0875_;
  assign _0878_ = _0265_;
  assign _0880_ = reload_init_counter;
  assign _0020_ = _0879_;
  assign _0882_ = sdram_dq_drive;
  assign _0018_ = _0881_;
  assign command_ack = _0733_;
  assign cache_we = _0730_;
  assign sdram_cke_r = _0716_;
  assign sdram_cs_n_r = _0703_;
  assign sdram_we_n_r = _0690_;
  assign sdram_cas_n_r = _0678_;
  assign sdram_ras_n_r = _0665_;
  assign sdram_dqm_r = _0645_;
  assign sdram_ba_r = _0635_;
  assign sdram_dq_drive = _0631_;
  assign adr_load_mode = _0628_;
  assign adr_load_evictrow = _0626_;
  assign adr_load_evictcolumn = _0624_;
  assign adr_load_refillrow = _0622_;
  assign adr_load_refillcolumn = _0620_;
  assign adr_load_A10 = _0617_;
  assign reload_init_counter = _0574_;
  assign reload_prechargeall_counter = _0614_;
  assign reload_precharge_counter = _0609_;
  assign reload_autorefresh_counter = _0604_;
  assign reload_activate_counter = _0600_;
  assign reload_refresh_counter = _0597_;
  assign track_open = _0594_;
  assign track_close = 1'h0;
  assign track_closeall = _0591_;
  assign load_track_with_evict = _0589_;
  assign load_track_with_refill = _0587_;
  assign reload_burst_counter = _0582_;
  assign load_cache_msb_evict = _0580_;
  assign load_cache_msb_refill = _0576_;
  assign next_state = _0552_;
  assign next_burst_counter = _0771_;
  assign { _0219_[12:6], _0219_[4:2] } = 10'h000;
  assign { _0219_[5], _0219_[1:0] } = { _0628_, _0628_, _0628_ };
  assign { _0224_[12:11], _0224_[9:0] } = 12'h000;
  assign _0224_[10] = _0617_;
  assign _0785_ = _0783_;
  assign _0795_ = _0791_;
  assign _0803_ = _0801_;
  assign _0813_ = _0809_;
  assign _0822_ = _0820_;
  assign _0834_ = _0829_;
  assign _0843_ = _0841_;
  assign _0853_ = _0849_;
endmodule
