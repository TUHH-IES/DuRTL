$date
	Fri Mar 15 07:08:31 2024
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module SPI_Slave_tb $end
$var wire 1 ! slaveMISO $end
$var wire 8 " read_data [7:0] $end
$var parameter 32 # PERIOD $end
$var reg 8 $ In_Data [7:0] $end
$var reg 8 % MOSI_Arr [7:0] $end
$var reg 8 & Master_Memory [7:0] $end
$var reg 1 ' reset $end
$var reg 1 ( slaveCPHA $end
$var reg 1 ) slaveCPOL $end
$var reg 1 * slaveCS_ $end
$var reg 1 + slaveMOSI $end
$var reg 1 , slaveSCLK $end
$var reg 1 - slave_start $end
$var integer 32 . i [31:0] $end
$scope module Slave $end
$var wire 8 / In_Data [7:0] $end
$var wire 8 0 read_data [7:0] $end
$var wire 1 ' reset $end
$var wire 1 ( slaveCPHA $end
$var wire 1 ) slaveCPOL $end
$var wire 1 * slaveCS_ $end
$var wire 1 + slaveMOSI $end
$var wire 1 , slaveSCLK $end
$var wire 1 - slave_start $end
$var reg 8 1 memReg [7:0] $end
$var reg 1 ! slaveMISO $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100 #
$end
#0
$dumpvars
b1111 1
b1111 0
b1111 /
bx .
x-
0,
x+
1*
0)
0(
1'
bx &
b10101010 %
b1111 $
b1111 "
x!
$end
#200
1,
#400
1!
0,
b0 .
0'
0*
#600
b111 "
b111 0
b111 1
1,
1-
0+
#800
0,
b1 .
bx1 &
#1000
b10000011 "
b10000011 0
b10000011 1
1,
1+
#1200
0,
b10 .
bx11 &
#1400
b1000001 "
b1000001 0
b1000001 1
1,
0+
#1600
0,
b11 .
bx111 &
#1800
b10100000 "
b10100000 0
b10100000 1
1,
1+
#2000
0!
0,
b100 .
bx1111 &
#2200
b1010000 "
b1010000 0
b1010000 1
1,
0+
#2400
0,
b101 .
bx01111 &
#2600
b10101000 "
b10101000 0
b10101000 1
1,
1+
#2800
0,
b110 .
bx001111 &
#3000
b1010100 "
b1010100 0
b1010100 1
1,
0+
#3200
0,
b111 .
bx0001111 &
#3400
b10101010 "
b10101010 0
b10101010 1
1,
1+
#3600
0,
b1000 .
b1111 &
#3800
b11011000 "
b11011000 0
b11011000 1
1,
b0 .
0-
bx &
1*
b1110110 %
1'
b11011000 $
b11011000 /
1(
#4000
b11101100 "
b11101100 0
b11101100 1
0,
0'
0*
1-
#4200
1,
b1 .
bx0 &
0+
#4400
b1110110 "
b1110110 0
b1110110 1
0,
#4600
1,
b10 .
bx00 &
1+
#4800
b10111011 "
b10111011 0
b10111011 1
0,
#5000
1!
1,
b11 .
bx000 &
#5200
b11011101 "
b11011101 0
b11011101 1
0,
#5400
1,
b100 .
bx1000 &
0+
#5600
b1101110 "
b1101110 0
b1101110 1
0,
#5800
0!
1,
b101 .
bx11000 &
1+
#6000
b10110111 "
b10110111 0
b10110111 1
0,
#6200
1!
1,
b110 .
bx011000 &
#6400
b11011011 "
b11011011 0
b11011011 1
0,
#6600
1,
b111 .
bx1011000 &
#6800
b11101101 "
b11101101 0
b11101101 1
0,
#7000
1,
b1000 .
b11011000 &
0+
#7200
b1110110 "
b1110110 0
b1110110 1
0,
#7400
b1011001 "
b1011001 0
b1011001 1
b0 .
0-
bx &
1*
b0 %
1'
b1011001 $
b1011001 /
0,
1)
0(
#7600
b101100 "
b101100 0
b101100 1
1,
1-
0'
0*
#7800
0!
0,
b1 .
bx1 &
#8000
b10110 "
b10110 0
b10110 1
1,
#8200
0,
b10 .
bx01 &
#8400
b1011 "
b1011 0
b1011 1
1,
#8600
1!
0,
b11 .
bx001 &
#8800
b101 "
b101 0
b101 1
1,
#9000
0,
b100 .
bx1001 &
#9200
b10 "
b10 0
b10 1
1,
#9400
0!
0,
b101 .
bx11001 &
#9600
b1 "
b1 0
b1 1
1,
#9800
1!
0,
b110 .
bx011001 &
#10000
b0 "
b0 0
b0 1
1,
#10200
0!
0,
b111 .
bx1011001 &
#10400
1,
#10600
0,
b1000 .
b1011001 &
#10800
1,
#11000
b11011 "
b11011 0
b11011 1
0,
b0 .
0-
bx &
1*
b11111111 %
1'
b11011 $
b11011 /
1(
#11200
1!
1,
1-
0'
0*
#11400
b10001101 "
b10001101 0
b10001101 1
0,
b1 .
bx1 &
1+
#11600
1,
#11800
b11000110 "
b11000110 0
b11000110 1
0,
b10 .
bx11 &
#12000
0!
1,
#12200
b11100011 "
b11100011 0
b11100011 1
0,
b11 .
bx011 &
#12400
1!
1,
#12600
b11110001 "
b11110001 0
b11110001 1
0,
b100 .
bx1011 &
#12800
1,
#13000
b11111000 "
b11111000 0
b11111000 1
0,
b101 .
bx11011 &
#13200
0!
1,
#13400
b11111100 "
b11111100 0
b11111100 1
0,
b110 .
bx011011 &
#13600
1,
#13800
b11111110 "
b11111110 0
b11111110 1
0,
b111 .
bx0011011 &
#14000
1,
#14200
b11111111 "
b11111111 0
b11111111 1
0,
b1000 .
b11011 &
#14400
1!
1,
#14600
0,
