/* Generated by Yosys 0.33+72 (git sha1 ac8b31e00, clang 10.0.0-4ubuntu1 -fPIC -Os) */

module multiple_nets(a, b, y);
  wire [31:0] _0_;
  wire [31:0] _1_;
  input [31:0] a;
  wire [31:0] a;
  input [31:0] b;
  wire [31:0] b;
  wire [31:0] constant;
  wire [31:0] test_wire;
  wire [31:0] test_wire2;
  output [31:0] y;
  wire [31:0] y;
  assign _0_ = a | b;
  assign y = _0_ ^ 32'd3221225475;
  assign _1_[31] = y[31];
  assign _1_[30] = y[30];
  assign _1_[29] = y[29];
  assign _1_[28] = y[28];
  assign _1_[27] = y[27];
  assign _1_[26] = y[26];
  assign _1_[25] = y[25];
  assign _1_[24] = y[24];
  assign _1_[23] = y[23];
  assign _1_[22] = y[22];
  assign _1_[21] = y[21];
  assign _1_[20] = y[20];
  assign _1_[19] = y[19];
  assign _1_[18] = y[18];
  assign _1_[17] = y[17];
  assign _1_[16] = y[16];
  assign _1_[15] = y[15];
  assign _1_[14] = y[14];
  assign _1_[13] = y[13];
  assign _1_[12] = y[12];
  assign _1_[11] = y[11];
  assign _1_[10] = y[10];
  assign _1_[9] = y[9];
  assign _1_[8] = y[8];
  assign _1_[7] = y[7];
  assign _1_[6] = y[6];
  assign _1_[5] = y[5];
  assign _1_[4] = y[4];
  assign _1_[3] = y[3];
  assign _1_[2] = y[2];
  assign _1_[1] = y[1];
  assign _1_[0] = y[0];
  assign constant[31] = 1'h1;
  assign constant[30] = 1'h1;
  assign constant[29] = 1'h0;
  assign constant[28] = 1'h0;
  assign constant[27] = 1'h0;
  assign constant[26] = 1'h0;
  assign constant[25] = 1'h0;
  assign constant[24] = 1'h0;
  assign constant[23] = 1'h0;
  assign constant[22] = 1'h0;
  assign constant[21] = 1'h0;
  assign constant[20] = 1'h0;
  assign constant[19] = 1'h0;
  assign constant[18] = 1'h0;
  assign constant[17] = 1'h0;
  assign constant[16] = 1'h0;
  assign constant[15] = 1'h0;
  assign constant[14] = 1'h0;
  assign constant[13] = 1'h0;
  assign constant[12] = 1'h0;
  assign constant[11] = 1'h0;
  assign constant[10] = 1'h0;
  assign constant[9] = 1'h0;
  assign constant[8] = 1'h0;
  assign constant[7] = 1'h0;
  assign constant[6] = 1'h0;
  assign constant[5] = 1'h0;
  assign constant[4] = 1'h0;
  assign constant[3] = 1'h0;
  assign constant[2] = 1'h0;
  assign constant[1] = 1'h1;
  assign constant[0] = 1'h1;
  assign test_wire[31] = 1'h1;
  assign test_wire[30] = 1'h1;
  assign test_wire[29] = 1'h0;
  assign test_wire[28] = 1'h0;
  assign test_wire[27] = 1'h0;
  assign test_wire[26] = 1'h0;
  assign test_wire[25] = 1'h0;
  assign test_wire[24] = 1'h0;
  assign test_wire[23] = 1'h0;
  assign test_wire[22] = 1'h0;
  assign test_wire[21] = 1'h0;
  assign test_wire[20] = 1'h0;
  assign test_wire[19] = 1'h0;
  assign test_wire[18] = 1'h0;
  assign test_wire[17] = 1'h0;
  assign test_wire[16] = 1'h0;
  assign test_wire[15] = 1'h0;
  assign test_wire[14] = 1'h0;
  assign test_wire[13] = 1'h0;
  assign test_wire[12] = 1'h0;
  assign test_wire[11] = 1'h0;
  assign test_wire[10] = 1'h0;
  assign test_wire[9] = 1'h0;
  assign test_wire[8] = 1'h0;
  assign test_wire[7] = 1'h0;
  assign test_wire[6] = 1'h0;
  assign test_wire[5] = 1'h0;
  assign test_wire[4] = 1'h0;
  assign test_wire[3] = 1'h0;
  assign test_wire[2] = 1'h0;
  assign test_wire[1] = 1'h1;
  assign test_wire[0] = 1'h1;
  assign test_wire2[31] = a[31];
  assign test_wire2[30] = a[30];
  assign test_wire2[29] = a[29];
  assign test_wire2[28] = a[28];
  assign test_wire2[27] = a[27];
  assign test_wire2[26] = a[26];
  assign test_wire2[25] = a[25];
  assign test_wire2[24] = a[24];
  assign test_wire2[23] = a[23];
  assign test_wire2[22] = a[22];
  assign test_wire2[21] = a[21];
  assign test_wire2[20] = a[20];
  assign test_wire2[19] = a[19];
  assign test_wire2[18] = a[18];
  assign test_wire2[17] = a[17];
  assign test_wire2[16] = a[16];
  assign test_wire2[15] = a[15];
  assign test_wire2[14] = a[14];
  assign test_wire2[13] = a[13];
  assign test_wire2[12] = a[12];
  assign test_wire2[11] = a[11];
  assign test_wire2[10] = a[10];
  assign test_wire2[9] = a[9];
  assign test_wire2[8] = a[8];
  assign test_wire2[7] = a[7];
  assign test_wire2[6] = a[6];
  assign test_wire2[5] = a[5];
  assign test_wire2[4] = a[4];
  assign test_wire2[3] = a[3];
  assign test_wire2[2] = a[2];
  assign test_wire2[1] = a[1];
  assign test_wire2[0] = a[0];
endmodule
