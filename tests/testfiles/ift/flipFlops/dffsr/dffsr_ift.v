/* Generated by Yosys 0.20 (git sha1 4fcb95ed087, clang  -fPIC -Os) */

(* src = "dffsr.v:1.1-29.10" *)
module m_0( CLK, CLK_t,CLR, CLR_t, D, D_t, Q, Q_t, SET, SET_t);
  (* src = "dffsr.v:8.7-8.10" *)
  input CLK;
  wire CLK;
  (* src = "dffsr.v:9.24-9.27" *)
  input CLR;
  wire CLR;
  (* src = "dffsr.v:9.29-9.30" *)
  input D;
  wire D;
  (* src = "dffsr.v:10.24-10.25" *)
  output Q;
  reg Q;
  (* src = "dffsr.v:9.19-9.22" *)
  input SET;
  wire SET;
  
  input [31:0] CLK_t;
  input [31:0] D_t;
  input [31:0] SET_t;
  input [31:0] CLR_t;
  output reg [31:0] Q_t;

  initial begin
      Q_t = 0;
  end

  (* src = "dffsr.v:19.3-25.18" *)
  always @(posedge CLK, posedge SET, posedge CLR)
    if (CLR) begin
    Q <= 1'b0;
    Q_t <= CLR_t;
    end
    else if (SET) begin
     Q <= 1'b1;
     Q_t <= SET_t;
     Q_t <= (^D === 1'bx) ? 0 : ((D == SET) ? (D_t | SET_t) : SET_t);
    end
    else begin
    Q <= D;
    Q_t <= D_t;
    end
endmodule
