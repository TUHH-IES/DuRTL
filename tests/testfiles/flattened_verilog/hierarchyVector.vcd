$date
	Tue May  9 18:14:14 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module hierarchyVector_tb $end
$var wire 5 ! c [4:0] $end
$var reg 5 " a [4:0] $end
$var reg 5 # b [4:0] $end
$scope module uut $end
$var wire 5 $ a [4:0] $end
$var wire 5 % b [4:0] $end
$var wire 5 & d [4:0] $end
$var wire 5 ' c [4:0] $end
$scope module m1 $end
$var wire 5 ( e [4:0] $end
$var wire 5 ) f [4:0] $end
$var wire 5 * h [4:0] $end
$var wire 5 + i [4:0] $end
$var wire 5 , g [4:0] $end
$scope module s1 $end
$var wire 5 - x [4:0] $end
$var wire 5 . y [4:0] $end
$var wire 5 / z [4:0] $end
$upscope $end
$scope module s2 $end
$var wire 5 0 x [4:0] $end
$var wire 5 1 y [4:0] $end
$var wire 5 2 z [4:0] $end
$upscope $end
$upscope $end
$scope module m2 $end
$var wire 5 3 e [4:0] $end
$var wire 5 4 f [4:0] $end
$var wire 5 5 h [4:0] $end
$var wire 5 6 i [4:0] $end
$var wire 5 7 g [4:0] $end
$scope module s1 $end
$var wire 5 8 x [4:0] $end
$var wire 5 9 y [4:0] $end
$var wire 5 : z [4:0] $end
$upscope $end
$scope module s2 $end
$var wire 5 ; x [4:0] $end
$var wire 5 < y [4:0] $end
$var wire 5 = z [4:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#1
b1 5
b1 <
b1 *
b1 1
b1 +
b1 /
b1 &
b1 ,
b1 2
b1 4
b1 9
b1 6
b1 :
b1 !
b1 '
b1 7
b1 =
b1 #
b1 %
b1 )
b1 .
b1 "
b1 $
b1 (
b1 -
b1 0
b1 3
b1 8
b1 ;
#3
b0 5
b0 <
b0 +
b0 /
b0 &
b0 ,
b0 2
b0 4
b0 9
b0 6
b0 :
b0 !
b0 '
b0 7
b0 =
b0 "
b0 $
b0 (
b0 -
b0 0
b0 3
b0 8
b0 ;
#5
b0 *
b0 1
b0 #
b0 %
b0 )
b0 .
#7
b1 "
b1 $
b1 (
b1 -
b1 0
b1 3
b1 8
b1 ;
